Useless nonterminals

   test


Terminals which are not used

   MK_DOT
   ERROR


Useless rules

  117 test: assign_expr


State 208 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl_list
    2        | /* empty */

    3 global_decl_list: global_decl_list global_decl
    4                 | global_decl

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    8              | VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

   11 param_list: param_list MK_COMMA param
   12           | param

   13 param: type ID
   14      | type ID dim_fn

   15 dim_fn: MK_LB expr_null MK_RB
   16       | dim_fn MK_LB expr MK_RB

   17 expr_null: expr
   18          | /* empty */

   19 block: decl_list stmt_list
   20      | stmt_list
   21      | decl_list
   22      | /* empty */

   23 decl_list: decl_list decl
   24          | decl

   25 decl: type_decl
   26     | var_decl

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON
   28          | TYPEDEF VOID id_list MK_SEMICOLON

   29 var_decl: type init_id_list MK_SEMICOLON

   30 type: INT
   31     | FLOAT
   32     | ID

   33 id_list: ID
   34        | id_list MK_COMMA ID
   35        | id_list MK_COMMA ID dim_decl
   36        | ID dim_decl

   37 dim_decl: MK_LB cexpr MK_RB
   38         | dim_decl MK_LB cexpr MK_RB

   39 cexpr: cexpr OP_PLUS mcexpr
   40      | cexpr OP_MINUS mcexpr
   41      | mcexpr

   42 mcexpr: mcexpr OP_TIMES cfactor
   43       | mcexpr OP_DIVIDE cfactor
   44       | cfactor

   45 cfactor: CONST
   46        | unary_op CONST
   47        | MK_LPAREN cexpr MK_RPAREN
   48        | unary_op MK_LPAREN cexpr MK_RPAREN

   49 init_id_list: init_id
   50             | init_id_list MK_COMMA init_id

   51 init_id: ID
   52        | ID dim_decl
   53        | ID OP_ASSIGN relop_expr

   54 stmt_list: stmt_list stmt
   55          | stmt

   56 stmt: MK_LBRACE block MK_RBRACE
   57     | WHILE MK_LPAREN nonempty_assign_expr_list MK_RPAREN stmt
   58     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   59     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   60     | IF MK_LPAREN nonempty_assign_expr_list MK_RPAREN stmt
   61     | IF MK_LPAREN nonempty_assign_expr_list MK_RPAREN stmt ELSE stmt
   62     | var_ref MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
   63     | MK_SEMICOLON
   64     | RETURN MK_SEMICOLON
   65     | RETURN relop_expr MK_SEMICOLON
   66     | double_add_id MK_SEMICOLON

   67 assign_expr_list: nonempty_assign_expr_list
   68                 | /* empty */

   69 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   70                          | assign_expr

   71 assign_expr: ID OP_ASSIGN relop_expr
   72            | relop_expr

   73 relop_expr: relop_term
   74           | relop_expr OP_OR relop_term

   75 relop_term: relop_factor
   76           | relop_term OP_AND relop_factor

   77 relop_factor: expr
   78             | expr rel_op expr

   79 rel_op: OP_EQ
   80       | OP_GE
   81       | OP_LE
   82       | OP_NE
   83       | OP_GT
   84       | OP_LT

   85 relop_expr_list: nonempty_relop_expr_list
   86                | /* empty */

   87 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
   88                         | relop_expr

   89 expr: expr add_op term
   90     | term

   91 add_op: OP_PLUS
   92       | OP_MINUS

   93 term: term mul_op factor
   94     | factor

   95 mul_op: OP_TIMES
   96       | OP_DIVIDE

   97 factor: MK_LPAREN relop_expr MK_RPAREN
   98       | unary_op MK_LPAREN relop_expr MK_RPAREN
   99       | CONST
  100       | unary_op CONST
  101       | ID MK_LPAREN relop_expr_list MK_RPAREN
  102       | unary_op ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | var_ref
  104       | unary_op var_ref
  105       | double_add_id

  106 double_add_id: OP_PP ID
  107              | ID OP_PP
  108              | OP_MM ID
  109              | ID OP_MM

  110 unary_op: OP_NOT
  111         | OP_PLUS
  112         | OP_MINUS

  113 var_ref: ID
  114        | ID dim_list

  115 dim_list: dim_list MK_LB expr MK_RB
  116         | MK_LB expr MK_RB


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 9 10 13 14 32 33 34 35 36 51 52 53 71 101 102 106 107
    108 109 113 114
CONST (259) 45 46 99 100
VOID (260) 8 10 28
INT (261) 30
FLOAT (262) 31
IF (263) 60 61
ELSE (264) 61
WHILE (265) 57
FOR (266) 58
TYPEDEF (267) 27 28
OP_ASSIGN (268) 53 59 71
OP_OR (269) 74
OP_AND (270) 76
OP_NOT (271) 110
OP_EQ (272) 79
OP_NE (273) 82
OP_GT (274) 83
OP_LT (275) 84
OP_GE (276) 80
OP_LE (277) 81
OP_PLUS (278) 39 91 111
OP_PP (279) 106 107
OP_MINUS (280) 40 92 112
OP_MM (281) 108 109
OP_TIMES (282) 42 95
OP_DIVIDE (283) 43 96
MK_LB (284) 15 16 37 38 115 116
MK_RB (285) 15 16 37 38 115 116
MK_LPAREN (286) 7 8 9 10 47 48 57 58 60 61 62 97 98 101 102
MK_RPAREN (287) 7 8 9 10 47 48 57 58 60 61 62 97 98 101 102
MK_LBRACE (288) 7 8 9 10 56
MK_RBRACE (289) 7 8 9 10 56
MK_COMMA (290) 11 34 35 50 69 87
MK_SEMICOLON (291) 27 28 29 58 59 62 63 64 65 66
MK_DOT (292)
ERROR (293)
RETURN (294) 64 65


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1 2, on right: 0
global_decl_list (42)
    on left: 3 4, on right: 1 3
global_decl (43)
    on left: 5 6, on right: 3 4
function_decl (44)
    on left: 7 8 9 10, on right: 5 6
param_list (45)
    on left: 11 12, on right: 7 8 11
param (46)
    on left: 13 14, on right: 11 12
dim_fn (47)
    on left: 15 16, on right: 14 16
expr_null (48)
    on left: 17 18, on right: 15
block (49)
    on left: 19 20 21 22, on right: 7 8 9 10 56
decl_list (50)
    on left: 23 24, on right: 5 19 21 23
decl (51)
    on left: 25 26, on right: 23 24
type_decl (52)
    on left: 27 28, on right: 25
var_decl (53)
    on left: 29, on right: 26
type (54)
    on left: 30 31 32, on right: 7 9 13 14 27 29
id_list (55)
    on left: 33 34 35 36, on right: 27 28 34 35
dim_decl (56)
    on left: 37 38, on right: 35 36 38 52
cexpr (57)
    on left: 39 40 41, on right: 37 38 39 40 47 48
mcexpr (58)
    on left: 42 43 44, on right: 39 40 41 42 43
cfactor (59)
    on left: 45 46 47 48, on right: 42 43 44
init_id_list (60)
    on left: 49 50, on right: 29 50
init_id (61)
    on left: 51 52 53, on right: 49 50
stmt_list (62)
    on left: 54 55, on right: 19 20 54
stmt (63)
    on left: 56 57 58 59 60 61 62 63 64 65 66, on right: 54 55 57 58
    60 61
assign_expr_list (64)
    on left: 67 68, on right: 58
nonempty_assign_expr_list (65)
    on left: 69 70, on right: 57 60 61 67 69
assign_expr (66)
    on left: 71 72, on right: 69 70
relop_expr (67)
    on left: 73 74, on right: 53 59 65 71 72 74 87 88 97 98
relop_term (68)
    on left: 75 76, on right: 73 74 76
relop_factor (69)
    on left: 77 78, on right: 75 76
rel_op (70)
    on left: 79 80 81 82 83 84, on right: 78
relop_expr_list (71)
    on left: 85 86, on right: 58 62 101 102
nonempty_relop_expr_list (72)
    on left: 87 88, on right: 85 87
expr (73)
    on left: 89 90, on right: 16 17 77 78 89 115 116
add_op (74)
    on left: 91 92, on right: 89
term (75)
    on left: 93 94, on right: 89 90 93
mul_op (76)
    on left: 95 96, on right: 93
factor (77)
    on left: 97 98 99 100 101 102 103 104 105, on right: 93 94
double_add_id (78)
    on left: 106 107 108 109, on right: 66 105
unary_op (79)
    on left: 110 111 112, on right: 46 48 98 100 102 104
var_ref (80)
    on left: 113 114, on right: 59 62 103 104
dim_list (81)
    on left: 115 116, on right: 114 115


state 0

    0 $accept: . program $end

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 2 (program)

    program           go to state 6
    global_decl_list  go to state 7
    global_decl       go to state 8
    function_decl     go to state 9
    decl_list         go to state 10
    decl              go to state 11
    type_decl         go to state 12
    var_decl          go to state 13
    type              go to state 14


state 1

   32 type: ID .

    $default  reduce using rule 32 (type)


state 2

    8 function_decl: VOID . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    ID  shift, and go to state 15


state 3

   30 type: INT .

    $default  reduce using rule 30 (type)


state 4

   31 type: FLOAT .

    $default  reduce using rule 31 (type)


state 5

   27 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   28          | TYPEDEF . VOID id_list MK_SEMICOLON

    ID     shift, and go to state 1
    VOID   shift, and go to state 16
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    type  go to state 17


state 6

    0 $accept: program . $end

    $end  shift, and go to state 18


state 7

    1 program: global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 1 (program)

    global_decl    go to state 19
    function_decl  go to state 9
    decl_list      go to state 10
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


state 8

    4 global_decl_list: global_decl .

    $default  reduce using rule 4 (global_decl_list)


state 9

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


state 10

    5 global_decl: decl_list . function_decl
   23 decl_list: decl_list . decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    function_decl  go to state 20
    decl           go to state 21
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


state 11

   24 decl_list: decl .

    $default  reduce using rule 24 (decl_list)


state 12

   25 decl: type_decl .

    $default  reduce using rule 25 (decl)


state 13

   26 decl: var_decl .

    $default  reduce using rule 26 (decl)


state 14

    7 function_decl: type . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 22

    init_id_list  go to state 23
    init_id       go to state 24


state 15

    8 function_decl: VOID ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_LPAREN  shift, and go to state 25


state 16

   28 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON

    ID  shift, and go to state 26

    id_list  go to state 27


state 17

   27 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 26

    id_list  go to state 28


state 18

    0 $accept: program $end .

    $default  accept


state 19

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


state 20

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


state 21

   23 decl_list: decl_list decl .

    $default  reduce using rule 23 (decl_list)


state 22

    7 function_decl: type ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   51 init_id: ID .
   52        | ID . dim_decl
   53        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 29
    MK_LB      shift, and go to state 30
    MK_LPAREN  shift, and go to state 31

    $default  reduce using rule 51 (init_id)

    dim_decl  go to state 32


state 23

   29 var_decl: type init_id_list . MK_SEMICOLON
   50 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 33
    MK_SEMICOLON  shift, and go to state 34


state 24

   49 init_id_list: init_id .

    $default  reduce using rule 49 (init_id_list)


state 25

    8 function_decl: VOID ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    ID         shift, and go to state 1
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 35

    param_list  go to state 36
    param       go to state 37
    type        go to state 38


state 26

   33 id_list: ID .
   36        | ID . dim_decl

    MK_LB  shift, and go to state 30

    $default  reduce using rule 33 (id_list)

    dim_decl  go to state 39


state 27

   28 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 40
    MK_SEMICOLON  shift, and go to state 41


state 28

   27 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 40
    MK_SEMICOLON  shift, and go to state 42


state 29

   53 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr     go to state 51
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 30

   37 dim_decl: MK_LB . cexpr MK_RB

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    cexpr     go to state 62
    mcexpr    go to state 63
    cfactor   go to state 64
    unary_op  go to state 65


state 31

    7 function_decl: type ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    ID         shift, and go to state 1
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 66

    param_list  go to state 67
    param       go to state 37
    type        go to state 38


state 32

   38 dim_decl: dim_decl . MK_LB cexpr MK_RB
   52 init_id: ID dim_decl .

    MK_LB  shift, and go to state 68

    $default  reduce using rule 52 (init_id)


state 33

   50 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 69

    init_id  go to state 70


state 34

   29 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 29 (var_decl)


state 35

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 71


state 36

    8 function_decl: VOID ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 72
    MK_COMMA   shift, and go to state 73


state 37

   12 param_list: param .

    $default  reduce using rule 12 (param_list)


state 38

   13 param: type . ID
   14      | type . ID dim_fn

    ID  shift, and go to state 74


state 39

   36 id_list: ID dim_decl .
   38 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 68

    $default  reduce using rule 36 (id_list)


state 40

   34 id_list: id_list MK_COMMA . ID
   35        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 75


state 41

   28 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 28 (type_decl)


state 42

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 27 (type_decl)


state 43

  101 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  107 double_add_id: ID . OP_PP
  109              | ID . OP_MM
  113 var_ref: ID .
  114        | ID . dim_list

    OP_PP      shift, and go to state 76
    OP_MM      shift, and go to state 77
    MK_LB      shift, and go to state 78
    MK_LPAREN  shift, and go to state 79

    $default  reduce using rule 113 (var_ref)

    dim_list  go to state 80


state 44

   99 factor: CONST .

    $default  reduce using rule 99 (factor)


state 45

  110 unary_op: OP_NOT .

    $default  reduce using rule 110 (unary_op)


state 46

  111 unary_op: OP_PLUS .

    $default  reduce using rule 111 (unary_op)


state 47

  106 double_add_id: OP_PP . ID

    ID  shift, and go to state 81


state 48

  112 unary_op: OP_MINUS .

    $default  reduce using rule 112 (unary_op)


state 49

  108 double_add_id: OP_MM . ID

    ID  shift, and go to state 82


state 50

   97 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr     go to state 83
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 51

   53 init_id: ID OP_ASSIGN relop_expr .
   74 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 84

    $default  reduce using rule 53 (init_id)


state 52

   73 relop_expr: relop_term .
   76 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 85

    $default  reduce using rule 73 (relop_expr)


state 53

   75 relop_term: relop_factor .

    $default  reduce using rule 75 (relop_term)


state 54

   77 relop_factor: expr .
   78             | expr . rel_op expr
   89 expr: expr . add_op term

    OP_EQ     shift, and go to state 86
    OP_NE     shift, and go to state 87
    OP_GT     shift, and go to state 88
    OP_LT     shift, and go to state 89
    OP_GE     shift, and go to state 90
    OP_LE     shift, and go to state 91
    OP_PLUS   shift, and go to state 92
    OP_MINUS  shift, and go to state 93

    $default  reduce using rule 77 (relop_factor)

    rel_op  go to state 94
    add_op  go to state 95


state 55

   90 expr: term .
   93 term: term . mul_op factor

    OP_TIMES   shift, and go to state 96
    OP_DIVIDE  shift, and go to state 97

    $default  reduce using rule 90 (expr)

    mul_op  go to state 98


state 56

   94 term: factor .

    $default  reduce using rule 94 (term)


state 57

  105 factor: double_add_id .

    $default  reduce using rule 105 (factor)


state 58

   98 factor: unary_op . MK_LPAREN relop_expr MK_RPAREN
  100       | unary_op . CONST
  102       | unary_op . ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | unary_op . var_ref

    ID         shift, and go to state 99
    CONST      shift, and go to state 100
    MK_LPAREN  shift, and go to state 101

    var_ref  go to state 102


state 59

  103 factor: var_ref .

    $default  reduce using rule 103 (factor)


state 60

   45 cfactor: CONST .

    $default  reduce using rule 45 (cfactor)


state 61

   47 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    cexpr     go to state 103
    mcexpr    go to state 63
    cfactor   go to state 64
    unary_op  go to state 65


state 62

   37 dim_decl: MK_LB cexpr . MK_RB
   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 104
    OP_MINUS  shift, and go to state 105
    MK_RB     shift, and go to state 106


state 63

   41 cexpr: mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 107
    OP_DIVIDE  shift, and go to state 108

    $default  reduce using rule 41 (cexpr)


state 64

   44 mcexpr: cfactor .

    $default  reduce using rule 44 (mcexpr)


state 65

   46 cfactor: unary_op . CONST
   48        | unary_op . MK_LPAREN cexpr MK_RPAREN

    CONST      shift, and go to state 109
    MK_LPAREN  shift, and go to state 110


state 66

    9 function_decl: type ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 111


state 67

    7 function_decl: type ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 112
    MK_COMMA   shift, and go to state 73


state 68

   38 dim_decl: dim_decl MK_LB . cexpr MK_RB

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    cexpr     go to state 113
    mcexpr    go to state 63
    cfactor   go to state 64
    unary_op  go to state 65


state 69

   51 init_id: ID .
   52        | ID . dim_decl
   53        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 29
    MK_LB      shift, and go to state 30

    $default  reduce using rule 51 (init_id)

    dim_decl  go to state 32


state 70

   50 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 50 (init_id_list)


state 71

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 114
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 115
    WHILE         shift, and go to state 116
    FOR           shift, and go to state 117
    TYPEDEF       shift, and go to state 5
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 118
    MK_SEMICOLON  shift, and go to state 119
    RETURN        shift, and go to state 120

    $default  reduce using rule 22 (block)

    block          go to state 121
    decl_list      go to state 122
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 123
    stmt_list      go to state 124
    stmt           go to state 125
    double_add_id  go to state 126
    var_ref        go to state 127


state 72

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 128


state 73

   11 param_list: param_list MK_COMMA . param

    ID     shift, and go to state 1
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    param  go to state 129
    type   go to state 38


state 74

   13 param: type ID .
   14      | type ID . dim_fn

    MK_LB  shift, and go to state 130

    $default  reduce using rule 13 (param)

    dim_fn  go to state 131


state 75

   34 id_list: id_list MK_COMMA ID .
   35        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 30

    $default  reduce using rule 34 (id_list)

    dim_decl  go to state 132


state 76

  107 double_add_id: ID OP_PP .

    $default  reduce using rule 107 (double_add_id)


state 77

  109 double_add_id: ID OP_MM .

    $default  reduce using rule 109 (double_add_id)


state 78

  116 dim_list: MK_LB . expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    expr           go to state 133
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 79

  101 factor: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 86 (relop_expr_list)

    relop_expr                go to state 134
    relop_term                go to state 52
    relop_factor              go to state 53
    relop_expr_list           go to state 135
    nonempty_relop_expr_list  go to state 136
    expr                      go to state 54
    term                      go to state 55
    factor                    go to state 56
    double_add_id             go to state 57
    unary_op                  go to state 58
    var_ref                   go to state 59


state 80

  114 var_ref: ID dim_list .
  115 dim_list: dim_list . MK_LB expr MK_RB

    MK_LB  shift, and go to state 137

    $default  reduce using rule 114 (var_ref)


state 81

  106 double_add_id: OP_PP ID .

    $default  reduce using rule 106 (double_add_id)


state 82

  108 double_add_id: OP_MM ID .

    $default  reduce using rule 108 (double_add_id)


state 83

   74 relop_expr: relop_expr . OP_OR relop_term
   97 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 84
    MK_RPAREN  shift, and go to state 138


state 84

   74 relop_expr: relop_expr OP_OR . relop_term

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_term     go to state 139
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 85

   76 relop_term: relop_term OP_AND . relop_factor

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_factor   go to state 140
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 86

   79 rel_op: OP_EQ .

    $default  reduce using rule 79 (rel_op)


state 87

   82 rel_op: OP_NE .

    $default  reduce using rule 82 (rel_op)


state 88

   83 rel_op: OP_GT .

    $default  reduce using rule 83 (rel_op)


state 89

   84 rel_op: OP_LT .

    $default  reduce using rule 84 (rel_op)


state 90

   80 rel_op: OP_GE .

    $default  reduce using rule 80 (rel_op)


state 91

   81 rel_op: OP_LE .

    $default  reduce using rule 81 (rel_op)


state 92

   91 add_op: OP_PLUS .

    $default  reduce using rule 91 (add_op)


state 93

   92 add_op: OP_MINUS .

    $default  reduce using rule 92 (add_op)


state 94

   78 relop_factor: expr rel_op . expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    expr           go to state 141
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 95

   89 expr: expr add_op . term

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    term           go to state 142
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 96

   95 mul_op: OP_TIMES .

    $default  reduce using rule 95 (mul_op)


state 97

   96 mul_op: OP_DIVIDE .

    $default  reduce using rule 96 (mul_op)


state 98

   93 term: term mul_op . factor

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    factor         go to state 143
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 99

  102 factor: unary_op ID . MK_LPAREN relop_expr_list MK_RPAREN
  113 var_ref: ID .
  114        | ID . dim_list

    MK_LB      shift, and go to state 78
    MK_LPAREN  shift, and go to state 144

    $default  reduce using rule 113 (var_ref)

    dim_list  go to state 80


state 100

  100 factor: unary_op CONST .

    $default  reduce using rule 100 (factor)


state 101

   98 factor: unary_op MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr     go to state 145
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 102

  104 factor: unary_op var_ref .

    $default  reduce using rule 104 (factor)


state 103

   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr
   47 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 104
    OP_MINUS   shift, and go to state 105
    MK_RPAREN  shift, and go to state 146


state 104

   39 cexpr: cexpr OP_PLUS . mcexpr

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    mcexpr    go to state 147
    cfactor   go to state 64
    unary_op  go to state 65


state 105

   40 cexpr: cexpr OP_MINUS . mcexpr

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    mcexpr    go to state 148
    cfactor   go to state 64
    unary_op  go to state 65


state 106

   37 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 37 (dim_decl)


state 107

   42 mcexpr: mcexpr OP_TIMES . cfactor

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    cfactor   go to state 149
    unary_op  go to state 65


state 108

   43 mcexpr: mcexpr OP_DIVIDE . cfactor

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    cfactor   go to state 150
    unary_op  go to state 65


state 109

   46 cfactor: unary_op CONST .

    $default  reduce using rule 46 (cfactor)


state 110

   48 cfactor: unary_op MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    cexpr     go to state 151
    mcexpr    go to state 63
    cfactor   go to state 64
    unary_op  go to state 65


state 111

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 114
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 115
    WHILE         shift, and go to state 116
    FOR           shift, and go to state 117
    TYPEDEF       shift, and go to state 5
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 118
    MK_SEMICOLON  shift, and go to state 119
    RETURN        shift, and go to state 120

    $default  reduce using rule 22 (block)

    block          go to state 152
    decl_list      go to state 122
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 123
    stmt_list      go to state 124
    stmt           go to state 125
    double_add_id  go to state 126
    var_ref        go to state 127


state 112

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 153


state 113

   38 dim_decl: dim_decl MK_LB cexpr . MK_RB
   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 104
    OP_MINUS  shift, and go to state 105
    MK_RB     shift, and go to state 154


state 114

   32 type: ID .
  107 double_add_id: ID . OP_PP
  109              | ID . OP_MM
  113 var_ref: ID .
  114        | ID . dim_list

    OP_PP  shift, and go to state 76
    OP_MM  shift, and go to state 77
    MK_LB  shift, and go to state 78

    ID        reduce using rule 32 (type)
    $default  reduce using rule 113 (var_ref)

    dim_list  go to state 80


state 115

   60 stmt: IF . MK_LPAREN nonempty_assign_expr_list MK_RPAREN stmt
   61     | IF . MK_LPAREN nonempty_assign_expr_list MK_RPAREN stmt ELSE stmt

    MK_LPAREN  shift, and go to state 155


state 116

   57 stmt: WHILE . MK_LPAREN nonempty_assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 156


state 117

   58 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 157


state 118

   56 stmt: MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 114
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 115
    WHILE         shift, and go to state 116
    FOR           shift, and go to state 117
    TYPEDEF       shift, and go to state 5
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 118
    MK_SEMICOLON  shift, and go to state 119
    RETURN        shift, and go to state 120

    $default  reduce using rule 22 (block)

    block          go to state 158
    decl_list      go to state 122
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 123
    stmt_list      go to state 124
    stmt           go to state 125
    double_add_id  go to state 126
    var_ref        go to state 127


state 119

   63 stmt: MK_SEMICOLON .

    $default  reduce using rule 63 (stmt)


state 120

   64 stmt: RETURN . MK_SEMICOLON
   65     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 43
    CONST         shift, and go to state 44
    OP_NOT        shift, and go to state 45
    OP_PLUS       shift, and go to state 46
    OP_PP         shift, and go to state 47
    OP_MINUS      shift, and go to state 48
    OP_MM         shift, and go to state 49
    MK_LPAREN     shift, and go to state 50
    MK_SEMICOLON  shift, and go to state 159

    relop_expr     go to state 160
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 121

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 161


state 122

   19 block: decl_list . stmt_list
   21      | decl_list .
   23 decl_list: decl_list . decl

    ID            shift, and go to state 114
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 115
    WHILE         shift, and go to state 116
    FOR           shift, and go to state 117
    TYPEDEF       shift, and go to state 5
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 118
    MK_SEMICOLON  shift, and go to state 119
    RETURN        shift, and go to state 120

    $default  reduce using rule 21 (block)

    decl           go to state 21
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 123
    stmt_list      go to state 162
    stmt           go to state 125
    double_add_id  go to state 126
    var_ref        go to state 127


state 123

   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 69

    init_id_list  go to state 23
    init_id       go to state 24


state 124

   20 block: stmt_list .
   54 stmt_list: stmt_list . stmt

    ID            shift, and go to state 163
    IF            shift, and go to state 115
    WHILE         shift, and go to state 116
    FOR           shift, and go to state 117
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 118
    MK_SEMICOLON  shift, and go to state 119
    RETURN        shift, and go to state 120

    $default  reduce using rule 20 (block)

    stmt           go to state 164
    double_add_id  go to state 126
    var_ref        go to state 127


state 125

   55 stmt_list: stmt .

    $default  reduce using rule 55 (stmt_list)


state 126

   66 stmt: double_add_id . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 165


state 127

   59 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON
   62     | var_ref . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON

    OP_ASSIGN  shift, and go to state 166
    MK_LPAREN  shift, and go to state 167


state 128

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 114
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 115
    WHILE         shift, and go to state 116
    FOR           shift, and go to state 117
    TYPEDEF       shift, and go to state 5
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 118
    MK_SEMICOLON  shift, and go to state 119
    RETURN        shift, and go to state 120

    $default  reduce using rule 22 (block)

    block          go to state 168
    decl_list      go to state 122
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 123
    stmt_list      go to state 124
    stmt           go to state 125
    double_add_id  go to state 126
    var_ref        go to state 127


state 129

   11 param_list: param_list MK_COMMA param .

    $default  reduce using rule 11 (param_list)


state 130

   15 dim_fn: MK_LB . expr_null MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 18 (expr_null)

    expr_null      go to state 169
    expr           go to state 170
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 131

   14 param: type ID dim_fn .
   16 dim_fn: dim_fn . MK_LB expr MK_RB

    MK_LB  shift, and go to state 171

    $default  reduce using rule 14 (param)


state 132

   35 id_list: id_list MK_COMMA ID dim_decl .
   38 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 68

    $default  reduce using rule 35 (id_list)


state 133

   89 expr: expr . add_op term
  116 dim_list: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 92
    OP_MINUS  shift, and go to state 93
    MK_RB     shift, and go to state 172

    add_op  go to state 95


state 134

   74 relop_expr: relop_expr . OP_OR relop_term
   88 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 84

    $default  reduce using rule 88 (nonempty_relop_expr_list)


state 135

  101 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 173


state 136

   85 relop_expr_list: nonempty_relop_expr_list .
   87 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 174

    $default  reduce using rule 85 (relop_expr_list)


state 137

  115 dim_list: dim_list MK_LB . expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    expr           go to state 175
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 138

   97 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 97 (factor)


state 139

   74 relop_expr: relop_expr OP_OR relop_term .
   76 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 85

    $default  reduce using rule 74 (relop_expr)


state 140

   76 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 76 (relop_term)


state 141

   78 relop_factor: expr rel_op expr .
   89 expr: expr . add_op term

    OP_PLUS   shift, and go to state 92
    OP_MINUS  shift, and go to state 93

    $default  reduce using rule 78 (relop_factor)

    add_op  go to state 95


state 142

   89 expr: expr add_op term .
   93 term: term . mul_op factor

    OP_TIMES   shift, and go to state 96
    OP_DIVIDE  shift, and go to state 97

    $default  reduce using rule 89 (expr)

    mul_op  go to state 98


state 143

   93 term: term mul_op factor .

    $default  reduce using rule 93 (term)


state 144

  102 factor: unary_op ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 86 (relop_expr_list)

    relop_expr                go to state 134
    relop_term                go to state 52
    relop_factor              go to state 53
    relop_expr_list           go to state 176
    nonempty_relop_expr_list  go to state 136
    expr                      go to state 54
    term                      go to state 55
    factor                    go to state 56
    double_add_id             go to state 57
    unary_op                  go to state 58
    var_ref                   go to state 59


state 145

   74 relop_expr: relop_expr . OP_OR relop_term
   98 factor: unary_op MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 84
    MK_RPAREN  shift, and go to state 177


state 146

   47 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 47 (cfactor)


state 147

   39 cexpr: cexpr OP_PLUS mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 107
    OP_DIVIDE  shift, and go to state 108

    $default  reduce using rule 39 (cexpr)


state 148

   40 cexpr: cexpr OP_MINUS mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 107
    OP_DIVIDE  shift, and go to state 108

    $default  reduce using rule 40 (cexpr)


state 149

   42 mcexpr: mcexpr OP_TIMES cfactor .

    $default  reduce using rule 42 (mcexpr)


state 150

   43 mcexpr: mcexpr OP_DIVIDE cfactor .

    $default  reduce using rule 43 (mcexpr)


state 151

   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr
   48 cfactor: unary_op MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 104
    OP_MINUS   shift, and go to state 105
    MK_RPAREN  shift, and go to state 178


state 152

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 179


state 153

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 114
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 115
    WHILE         shift, and go to state 116
    FOR           shift, and go to state 117
    TYPEDEF       shift, and go to state 5
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 118
    MK_SEMICOLON  shift, and go to state 119
    RETURN        shift, and go to state 120

    $default  reduce using rule 22 (block)

    block          go to state 180
    decl_list      go to state 122
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 123
    stmt_list      go to state 124
    stmt           go to state 125
    double_add_id  go to state 126
    var_ref        go to state 127


state 154

   38 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 38 (dim_decl)


state 155

   60 stmt: IF MK_LPAREN . nonempty_assign_expr_list MK_RPAREN stmt
   61     | IF MK_LPAREN . nonempty_assign_expr_list MK_RPAREN stmt ELSE stmt

    ID         shift, and go to state 181
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    nonempty_assign_expr_list  go to state 182
    assign_expr                go to state 183
    relop_expr                 go to state 184
    relop_term                 go to state 52
    relop_factor               go to state 53
    expr                       go to state 54
    term                       go to state 55
    factor                     go to state 56
    double_add_id              go to state 57
    unary_op                   go to state 58
    var_ref                    go to state 59


state 156

   57 stmt: WHILE MK_LPAREN . nonempty_assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 181
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    nonempty_assign_expr_list  go to state 185
    assign_expr                go to state 183
    relop_expr                 go to state 184
    relop_term                 go to state 52
    relop_factor               go to state 53
    expr                       go to state 54
    term                       go to state 55
    factor                     go to state 56
    double_add_id              go to state 57
    unary_op                   go to state 58
    var_ref                    go to state 59


state 157

   58 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 181
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 68 (assign_expr_list)

    assign_expr_list           go to state 186
    nonempty_assign_expr_list  go to state 187
    assign_expr                go to state 183
    relop_expr                 go to state 184
    relop_term                 go to state 52
    relop_factor               go to state 53
    expr                       go to state 54
    term                       go to state 55
    factor                     go to state 56
    double_add_id              go to state 57
    unary_op                   go to state 58
    var_ref                    go to state 59


state 158

   56 stmt: MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 188


state 159

   64 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 64 (stmt)


state 160

   65 stmt: RETURN relop_expr . MK_SEMICOLON
   74 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 84
    MK_SEMICOLON  shift, and go to state 189


state 161

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 10 (function_decl)


state 162

   19 block: decl_list stmt_list .
   54 stmt_list: stmt_list . stmt

    ID            shift, and go to state 163
    IF            shift, and go to state 115
    WHILE         shift, and go to state 116
    FOR           shift, and go to state 117
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 118
    MK_SEMICOLON  shift, and go to state 119
    RETURN        shift, and go to state 120

    $default  reduce using rule 19 (block)

    stmt           go to state 164
    double_add_id  go to state 126
    var_ref        go to state 127


state 163

  107 double_add_id: ID . OP_PP
  109              | ID . OP_MM
  113 var_ref: ID .
  114        | ID . dim_list

    OP_PP  shift, and go to state 76
    OP_MM  shift, and go to state 77
    MK_LB  shift, and go to state 78

    $default  reduce using rule 113 (var_ref)

    dim_list  go to state 80


state 164

   54 stmt_list: stmt_list stmt .

    $default  reduce using rule 54 (stmt_list)


state 165

   66 stmt: double_add_id MK_SEMICOLON .

    $default  reduce using rule 66 (stmt)


state 166

   59 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr     go to state 190
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 167

   62 stmt: var_ref MK_LPAREN . relop_expr_list MK_RPAREN MK_SEMICOLON

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 86 (relop_expr_list)

    relop_expr                go to state 134
    relop_term                go to state 52
    relop_factor              go to state 53
    relop_expr_list           go to state 191
    nonempty_relop_expr_list  go to state 136
    expr                      go to state 54
    term                      go to state 55
    factor                    go to state 56
    double_add_id             go to state 57
    unary_op                  go to state 58
    var_ref                   go to state 59


state 168

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 192


state 169

   15 dim_fn: MK_LB expr_null . MK_RB

    MK_RB  shift, and go to state 193


state 170

   17 expr_null: expr .
   89 expr: expr . add_op term

    OP_PLUS   shift, and go to state 92
    OP_MINUS  shift, and go to state 93

    $default  reduce using rule 17 (expr_null)

    add_op  go to state 95


state 171

   16 dim_fn: dim_fn MK_LB . expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    expr           go to state 194
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 172

  116 dim_list: MK_LB expr MK_RB .

    $default  reduce using rule 116 (dim_list)


state 173

  101 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 101 (factor)


state 174

   87 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr     go to state 195
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 175

   89 expr: expr . add_op term
  115 dim_list: dim_list MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 92
    OP_MINUS  shift, and go to state 93
    MK_RB     shift, and go to state 196

    add_op  go to state 95


state 176

  102 factor: unary_op ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 197


state 177

   98 factor: unary_op MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 98 (factor)


state 178

   48 cfactor: unary_op MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 48 (cfactor)


state 179

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 9 (function_decl)


state 180

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 198


state 181

   71 assign_expr: ID . OP_ASSIGN relop_expr
  101 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  107 double_add_id: ID . OP_PP
  109              | ID . OP_MM
  113 var_ref: ID .
  114        | ID . dim_list

    OP_ASSIGN  shift, and go to state 199
    OP_PP      shift, and go to state 76
    OP_MM      shift, and go to state 77
    MK_LB      shift, and go to state 78
    MK_LPAREN  shift, and go to state 79

    $default  reduce using rule 113 (var_ref)

    dim_list  go to state 80


state 182

   60 stmt: IF MK_LPAREN nonempty_assign_expr_list . MK_RPAREN stmt
   61     | IF MK_LPAREN nonempty_assign_expr_list . MK_RPAREN stmt ELSE stmt
   69 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_RPAREN  shift, and go to state 200
    MK_COMMA   shift, and go to state 201


state 183

   70 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 70 (nonempty_assign_expr_list)


state 184

   72 assign_expr: relop_expr .
   74 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 84

    $default  reduce using rule 72 (assign_expr)


state 185

   57 stmt: WHILE MK_LPAREN nonempty_assign_expr_list . MK_RPAREN stmt
   69 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_RPAREN  shift, and go to state 202
    MK_COMMA   shift, and go to state 201


state 186

   58 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 203


state 187

   67 assign_expr_list: nonempty_assign_expr_list .
   69 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 201

    $default  reduce using rule 67 (assign_expr_list)


state 188

   56 stmt: MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 56 (stmt)


state 189

   65 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 65 (stmt)


state 190

   59 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   74 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 84
    MK_SEMICOLON  shift, and go to state 204


state 191

   62 stmt: var_ref MK_LPAREN relop_expr_list . MK_RPAREN MK_SEMICOLON

    MK_RPAREN  shift, and go to state 205


state 192

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 8 (function_decl)


state 193

   15 dim_fn: MK_LB expr_null MK_RB .

    $default  reduce using rule 15 (dim_fn)


state 194

   16 dim_fn: dim_fn MK_LB expr . MK_RB
   89 expr: expr . add_op term

    OP_PLUS   shift, and go to state 92
    OP_MINUS  shift, and go to state 93
    MK_RB     shift, and go to state 206

    add_op  go to state 95


state 195

   74 relop_expr: relop_expr . OP_OR relop_term
   87 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 84

    $default  reduce using rule 87 (nonempty_relop_expr_list)


state 196

  115 dim_list: dim_list MK_LB expr MK_RB .

    $default  reduce using rule 115 (dim_list)


state 197

  102 factor: unary_op ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 102 (factor)


state 198

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 7 (function_decl)


state 199

   71 assign_expr: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr     go to state 207
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 200

   60 stmt: IF MK_LPAREN nonempty_assign_expr_list MK_RPAREN . stmt
   61     | IF MK_LPAREN nonempty_assign_expr_list MK_RPAREN . stmt ELSE stmt

    ID            shift, and go to state 163
    IF            shift, and go to state 115
    WHILE         shift, and go to state 116
    FOR           shift, and go to state 117
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 118
    MK_SEMICOLON  shift, and go to state 119
    RETURN        shift, and go to state 120

    stmt           go to state 208
    double_add_id  go to state 126
    var_ref        go to state 127


state 201

   69 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 181
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    assign_expr    go to state 209
    relop_expr     go to state 184
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


state 202

   57 stmt: WHILE MK_LPAREN nonempty_assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 163
    IF            shift, and go to state 115
    WHILE         shift, and go to state 116
    FOR           shift, and go to state 117
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 118
    MK_SEMICOLON  shift, and go to state 119
    RETURN        shift, and go to state 120

    stmt           go to state 210
    double_add_id  go to state 126
    var_ref        go to state 127


state 203

   58 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 86 (relop_expr_list)

    relop_expr                go to state 134
    relop_term                go to state 52
    relop_factor              go to state 53
    relop_expr_list           go to state 211
    nonempty_relop_expr_list  go to state 136
    expr                      go to state 54
    term                      go to state 55
    factor                    go to state 56
    double_add_id             go to state 57
    unary_op                  go to state 58
    var_ref                   go to state 59


state 204

   59 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 59 (stmt)


state 205

   62 stmt: var_ref MK_LPAREN relop_expr_list MK_RPAREN . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 212


state 206

   16 dim_fn: dim_fn MK_LB expr MK_RB .

    $default  reduce using rule 16 (dim_fn)


state 207

   71 assign_expr: ID OP_ASSIGN relop_expr .
   74 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 84

    $default  reduce using rule 71 (assign_expr)


state 208

   60 stmt: IF MK_LPAREN nonempty_assign_expr_list MK_RPAREN stmt .
   61     | IF MK_LPAREN nonempty_assign_expr_list MK_RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 213

    ELSE      [reduce using rule 60 (stmt)]
    $default  reduce using rule 60 (stmt)


state 209

   69 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 69 (nonempty_assign_expr_list)


state 210

   57 stmt: WHILE MK_LPAREN nonempty_assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 57 (stmt)


state 211

   58 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 214


state 212

   62 stmt: var_ref MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 62 (stmt)


state 213

   61 stmt: IF MK_LPAREN nonempty_assign_expr_list MK_RPAREN stmt ELSE . stmt

    ID            shift, and go to state 163
    IF            shift, and go to state 115
    WHILE         shift, and go to state 116
    FOR           shift, and go to state 117
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 118
    MK_SEMICOLON  shift, and go to state 119
    RETURN        shift, and go to state 120

    stmt           go to state 215
    double_add_id  go to state 126
    var_ref        go to state 127


state 214

   58 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 181
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 68 (assign_expr_list)

    assign_expr_list           go to state 216
    nonempty_assign_expr_list  go to state 187
    assign_expr                go to state 183
    relop_expr                 go to state 184
    relop_term                 go to state 52
    relop_factor               go to state 53
    expr                       go to state 54
    term                       go to state 55
    factor                     go to state 56
    double_add_id              go to state 57
    unary_op                   go to state 58
    var_ref                    go to state 59


state 215

   61 stmt: IF MK_LPAREN nonempty_assign_expr_list MK_RPAREN stmt ELSE stmt .

    $default  reduce using rule 61 (stmt)


state 216

   58 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 217


state 217

   58 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 163
    IF            shift, and go to state 115
    WHILE         shift, and go to state 116
    FOR           shift, and go to state 117
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 118
    MK_SEMICOLON  shift, and go to state 119
    RETURN        shift, and go to state 120

    stmt           go to state 218
    double_add_id  go to state 126
    var_ref        go to state 127


state 218

   58 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 58 (stmt)
