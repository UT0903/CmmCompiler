Digraph AST
{
label = "AST_Graph.gv"
node0 [label ="PROGRAM_NODE"]
node1 [label ="DECLARATION_NODE FUNCTION_DECL"]
node2 [label ="IDENTIFIER_NODE int NORMAL_ID"]
node3 [label ="IDENTIFIER_NODE main NORMAL_ID"]
node4 [label ="PARAM_LIST_NODE"]
node5 [label ="BLOCK_NODE"]
node6 [label ="STMT_LIST_NODE"]
node7 [label ="STMT_NODE FOR_STMT"]
node8 [label ="NONEMPTY_ASSIGN_EXPR_LIST_NODE"]
node9 [label ="STMT_NODE ASSIGN_STMT"]
node10 [label ="IDENTIFIER_NODE a NORMAL_ID"]
node11 [label ="IDENTIFIER_NODE a ARRAY_ID"]
node12 [label ="CONST_VALUE_NODE 1"]
node11 -> node12 [style = bold]
node10 -> node11 [style = dashed]
node9 -> node10 [style = bold]
node13 [label ="STMT_NODE ASSIGN_STMT"]
node14 [label ="IDENTIFIER_NODE b NORMAL_ID"]
node15 [label ="IDENTIFIER_NODE b ARRAY_ID"]
node16 [label ="CONST_VALUE_NODE 1"]
node15 -> node16 [style = bold]
node14 -> node15 [style = dashed]
node13 -> node14 [style = bold]
node17 [label ="STMT_NODE ASSIGN_STMT"]
node18 [label ="IDENTIFIER_NODE c NORMAL_ID"]
node19 [label ="IDENTIFIER_NODE c ARRAY_ID"]
node20 [label ="CONST_VALUE_NODE 1"]
node19 -> node20 [style = bold]
node18 -> node19 [style = dashed]
node17 -> node18 [style = bold]
node13 -> node17 [style = dashed]
node9 -> node13 [style = dashed]
node8 -> node9 [style = bold]
node21 [label ="NONEMPTY_RELOP_EXPR_LIST_NODE"]
node22 [label ="EXPR_NODE &&"]
node23 [label ="EXPR_NODE <"]
node24 [label ="IDENTIFIER_NODE a NORMAL_ID"]
node25 [label ="CONST_VALUE_NODE 2"]
node24 -> node25 [style = dashed]
node23 -> node24 [style = bold]
node26 [label ="EXPR_NODE ||"]
node27 [label ="EXPR_NODE >"]
node28 [label ="EXPR_NODE +"]
node29 [label ="CONST_VALUE_NODE 5"]
node30 [label ="CONST_VALUE_NODE 7"]
node29 -> node30 [style = dashed]
node28 -> node29 [style = bold]
node31 [label ="CONST_VALUE_NODE 2"]
node28 -> node31 [style = dashed]
node27 -> node28 [style = bold]
node32 [label ="EXPR_NODE !="]
node33 [label ="IDENTIFIER_NODE e NORMAL_ID"]
node34 [label ="CONST_VALUE_NODE 1"]
node33 -> node34 [style = dashed]
node32 -> node33 [style = bold]
node27 -> node32 [style = dashed]
node26 -> node27 [style = bold]
node23 -> node26 [style = dashed]
node22 -> node23 [style = bold]
node21 -> node22 [style = bold]
node35 [label ="NONEMPTY_ASSIGN_EXPR_LIST_NODE"]
node36 [label ="STMT_NODE ASSIGN_STMT"]
node37 [label ="IDENTIFIER_NODE t NORMAL_ID"]
node38 [label ="EXPR_NODE +"]
node39 [label ="IDENTIFIER_NODE t NORMAL_ID"]
node40 [label ="IDENTIFIER_NODE d NORMAL_ID"]
node39 -> node40 [style = dashed]
node38 -> node39 [style = bold]
node37 -> node38 [style = dashed]
node36 -> node37 [style = bold]
node35 -> node36 [style = bold]
node41 [label ="BLOCK_NODE"]
node42 [label ="STMT_LIST_NODE"]
node43 [label ="STMT_NODE ASSIGN_STMT"]
node44 [label ="IDENTIFIER_NODE e NORMAL_ID"]
node45 [label ="CONST_VALUE_NODE 1"]
node44 -> node45 [style = dashed]
node43 -> node44 [style = bold]
node42 -> node43 [style = bold]
node41 -> node42 [style = bold]
node35 -> node41 [style = dashed]
node21 -> node35 [style = dashed]
node8 -> node21 [style = dashed]
node7 -> node8 [style = bold]
node6 -> node7 [style = bold]
node5 -> node6 [style = bold]
node4 -> node5 [style = dashed]
node3 -> node4 [style = dashed]
node2 -> node3 [style = dashed]
node1 -> node2 [style = bold]
node0 -> node1 [style = bold]
}
