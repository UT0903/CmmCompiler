Terminals unused in grammar

   MK_DOT
   ERROR


State 1 conflicts: 1 shift/reduce
State 130 conflicts: 1 shift/reduce
State 194 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl_list
    2        | %empty

    3 global_decl_list: global_decl_list global_decl
    4                 | global_decl

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 function_decl: function_head MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE block MK_RBRACE

    8 function_head: type ID
    9              | VOID ID

   10 opt_param_list: param_list
   11               | %empty

   12 param_list: param_list MK_COMMA param
   13           | param

   14 param: type ID
   15      | type ID dim_fn

   16 dim_fn: MK_LB expr_null MK_RB
   17       | dim_fn MK_LB expr MK_RB

   18 expr_null: expr
   19          | %empty

   20 block: decl_list stmt_list
   21      | stmt_list
   22      | decl_list
   23      | %empty

   24 decl_list: decl_list decl
   25          | decl

   26 decl: type_decl
   27     | var_decl

   28 type_decl: TYPEDEF type id_list MK_SEMICOLON
   29          | TYPEDEF VOID id_list MK_SEMICOLON

   30 var_decl: type init_id_list MK_SEMICOLON
   31         | ID init_id_list MK_SEMICOLON

   32 type: INT
   33     | FLOAT
   34     | ID

   35 id_list: ID
   36        | id_list MK_COMMA ID
   37        | id_list MK_COMMA ID dim_decl
   38        | ID dim_decl

   39 dim_decl: MK_LB cexpr MK_RB
   40         | dim_decl MK_LB cexpr MK_RB

   41 cexpr: cexpr OP_PLUS mcexpr
   42      | cexpr OP_MINUS mcexpr
   43      | mcexpr

   44 mcexpr: mcexpr OP_TIMES cfactor
   45       | mcexpr OP_DIVIDE cfactor
   46       | cfactor

   47 cfactor: CONST
   48        | MK_LPAREN cexpr MK_RPAREN

   49 init_id_list: init_id
   50             | init_id_list MK_COMMA init_id

   51 init_id: ID
   52        | ID dim_decl
   53        | ID OP_ASSIGN relop_expr

   54 stmt_list: stmt_list stmt
   55          | stmt

   56 stmt: MK_LBRACE block MK_RBRACE
   57     | WHILE MK_LPAREN test MK_RPAREN stmt
   58     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   59     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   60     | IF MK_LPAREN test MK_RPAREN stmt
   61     | IF MK_LPAREN test MK_RPAREN stmt ELSE stmt
   62     | ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
   63     | MK_SEMICOLON
   64     | RETURN MK_SEMICOLON
   65     | RETURN relop_expr MK_SEMICOLON

   66 assign_expr_list: nonempty_assign_expr_list
   67                 | %empty

   68 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   69                          | assign_expr

   70 test: assign_expr

   71 assign_expr: ID OP_ASSIGN relop_expr
   72            | relop_expr

   73 relop_expr: relop_term
   74           | relop_expr OP_OR relop_term

   75 relop_term: relop_factor
   76           | relop_term OP_AND relop_factor

   77 relop_factor: expr
   78             | expr rel_op expr

   79 rel_op: OP_EQ
   80       | OP_GE
   81       | OP_LE
   82       | OP_NE
   83       | OP_GT
   84       | OP_LT

   85 relop_expr_list: nonempty_relop_expr_list
   86                | %empty

   87 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
   88                         | relop_expr

   89 expr: expr add_op term
   90     | term

   91 add_op: OP_PLUS
   92       | OP_MINUS

   93 term: term mul_op factor
   94     | factor

   95 mul_op: OP_TIMES
   96       | OP_DIVIDE

   97 factor: MK_LPAREN relop_expr MK_RPAREN
   98       | OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   99       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
  100       | CONST
  101       | OP_MINUS CONST
  102       | OP_NOT CONST
  103       | ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN
  105       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  106       | var_ref
  107       | OP_MINUS var_ref
  108       | OP_NOT var_ref

  109 var_ref: ID
  110        | ID dim_list

  111 dim_list: dim_list MK_LB expr MK_RB
  112         | MK_LB expr MK_RB


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 8 9 14 15 31 34 35 36 37 38 51 52 53 62 71 103 104 105 109
    110
CONST (259) 47 100 101 102
VOID (260) 9 29
INT (261) 32
FLOAT (262) 33
IF (263) 60 61
ELSE (264) 61
WHILE (265) 57
FOR (266) 58
TYPEDEF (267) 28 29
OP_ASSIGN (268) 53 59 71
OP_OR (269) 74
OP_AND (270) 76
OP_NOT (271) 99 102 105 108
OP_EQ (272) 79
OP_NE (273) 82
OP_GT (274) 83
OP_LT (275) 84
OP_GE (276) 80
OP_LE (277) 81
OP_PLUS (278) 41 91
OP_MINUS (279) 42 92 98 101 104 107
OP_TIMES (280) 44 95
OP_DIVIDE (281) 45 96
MK_LB (282) 16 17 39 40 111 112
MK_RB (283) 16 17 39 40 111 112
MK_LPAREN (284) 7 48 57 58 60 61 62 97 98 99 103 104 105
MK_RPAREN (285) 7 48 57 58 60 61 62 97 98 99 103 104 105
MK_LBRACE (286) 7 56
MK_RBRACE (287) 7 56
MK_COMMA (288) 12 36 37 50 68 87
MK_SEMICOLON (289) 28 29 30 31 58 59 62 63 64 65
MK_DOT (290)
ERROR (291)
RETURN (292) 64 65


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
global_decl_list (40)
    on left: 3 4, on right: 1 3
global_decl (41)
    on left: 5 6, on right: 3 4
function_decl (42)
    on left: 7, on right: 5 6
function_head (43)
    on left: 8 9, on right: 7
opt_param_list (44)
    on left: 10 11, on right: 7
param_list (45)
    on left: 12 13, on right: 10 12
param (46)
    on left: 14 15, on right: 12 13
dim_fn (47)
    on left: 16 17, on right: 15 17
expr_null (48)
    on left: 18 19, on right: 16
block (49)
    on left: 20 21 22 23, on right: 7 56
decl_list (50)
    on left: 24 25, on right: 5 20 22 24
decl (51)
    on left: 26 27, on right: 24 25
type_decl (52)
    on left: 28 29, on right: 26
var_decl (53)
    on left: 30 31, on right: 27
type (54)
    on left: 32 33 34, on right: 8 14 15 28 30
id_list (55)
    on left: 35 36 37 38, on right: 28 29 36 37
dim_decl (56)
    on left: 39 40, on right: 37 38 40 52
cexpr (57)
    on left: 41 42 43, on right: 39 40 41 42 48
mcexpr (58)
    on left: 44 45 46, on right: 41 42 43 44 45
cfactor (59)
    on left: 47 48, on right: 44 45 46
init_id_list (60)
    on left: 49 50, on right: 30 31 50
init_id (61)
    on left: 51 52 53, on right: 49 50
stmt_list (62)
    on left: 54 55, on right: 20 21 54
stmt (63)
    on left: 56 57 58 59 60 61 62 63 64 65, on right: 54 55 57 58 60
    61
assign_expr_list (64)
    on left: 66 67, on right: 58
nonempty_assign_expr_list (65)
    on left: 68 69, on right: 66 68
test (66)
    on left: 70, on right: 57 60 61
assign_expr (67)
    on left: 71 72, on right: 68 69 70
relop_expr (68)
    on left: 73 74, on right: 53 59 65 71 72 74 87 88 97 98 99
relop_term (69)
    on left: 75 76, on right: 73 74 76
relop_factor (70)
    on left: 77 78, on right: 75 76
rel_op (71)
    on left: 79 80 81 82 83 84, on right: 78
relop_expr_list (72)
    on left: 85 86, on right: 58 62 103 104 105
nonempty_relop_expr_list (73)
    on left: 87 88, on right: 85 87
expr (74)
    on left: 89 90, on right: 17 18 77 78 89 111 112
add_op (75)
    on left: 91 92, on right: 89
term (76)
    on left: 93 94, on right: 89 90 93
mul_op (77)
    on left: 95 96, on right: 93
factor (78)
    on left: 97 98 99 100 101 102 103 104 105 106 107 108, on right:
    93 94
var_ref (79)
    on left: 109 110, on right: 59 106 107 108
dim_list (80)
    on left: 111 112, on right: 110 111


State 0

    0 $accept: . program $end

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 2 (program)

    program           go to state 6
    global_decl_list  go to state 7
    global_decl       go to state 8
    function_decl     go to state 9
    function_head     go to state 10
    decl_list         go to state 11
    decl              go to state 12
    type_decl         go to state 13
    var_decl          go to state 14
    type              go to state 15


State 1

   31 var_decl: ID . init_id_list MK_SEMICOLON
   34 type: ID .

    ID  shift, and go to state 16

    ID  [reduce using rule 34 (type)]

    init_id_list  go to state 17
    init_id       go to state 18


State 2

    9 function_head: VOID . ID

    ID  shift, and go to state 19


State 3

   32 type: INT .

    $default  reduce using rule 32 (type)


State 4

   33 type: FLOAT .

    $default  reduce using rule 33 (type)


State 5

   28 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   29          | TYPEDEF . VOID id_list MK_SEMICOLON

    ID     shift, and go to state 20
    VOID   shift, and go to state 21
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    type  go to state 22


State 6

    0 $accept: program . $end

    $end  shift, and go to state 23


State 7

    1 program: global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 1 (program)

    global_decl    go to state 24
    function_decl  go to state 9
    function_head  go to state 10
    decl_list      go to state 11
    decl           go to state 12
    type_decl      go to state 13
    var_decl       go to state 14
    type           go to state 15


State 8

    4 global_decl_list: global_decl .

    $default  reduce using rule 4 (global_decl_list)


State 9

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


State 10

    7 function_decl: function_head . MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_LPAREN  shift, and go to state 25


State 11

    5 global_decl: decl_list . function_decl
   24 decl_list: decl_list . decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    function_decl  go to state 26
    function_head  go to state 10
    decl           go to state 27
    type_decl      go to state 13
    var_decl       go to state 14
    type           go to state 15


State 12

   25 decl_list: decl .

    $default  reduce using rule 25 (decl_list)


State 13

   26 decl: type_decl .

    $default  reduce using rule 26 (decl)


State 14

   27 decl: var_decl .

    $default  reduce using rule 27 (decl)


State 15

    8 function_head: type . ID
   30 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 28

    init_id_list  go to state 29
    init_id       go to state 18


State 16

   51 init_id: ID .
   52        | ID . dim_decl
   53        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 30
    MK_LB      shift, and go to state 31

    $default  reduce using rule 51 (init_id)

    dim_decl  go to state 32


State 17

   31 var_decl: ID init_id_list . MK_SEMICOLON
   50 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 33
    MK_SEMICOLON  shift, and go to state 34


State 18

   49 init_id_list: init_id .

    $default  reduce using rule 49 (init_id_list)


State 19

    9 function_head: VOID ID .

    $default  reduce using rule 9 (function_head)


State 20

   34 type: ID .

    $default  reduce using rule 34 (type)


State 21

   29 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON

    ID  shift, and go to state 35

    id_list  go to state 36


State 22

   28 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 35

    id_list  go to state 37


State 23

    0 $accept: program $end .

    $default  accept


State 24

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


State 25

    7 function_decl: function_head MK_LPAREN . opt_param_list MK_RPAREN MK_LBRACE block MK_RBRACE

    ID     shift, and go to state 20
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    $default  reduce using rule 11 (opt_param_list)

    opt_param_list  go to state 38
    param_list      go to state 39
    param           go to state 40
    type            go to state 41


State 26

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


State 27

   24 decl_list: decl_list decl .

    $default  reduce using rule 24 (decl_list)


State 28

    8 function_head: type ID .
   51 init_id: ID .
   52        | ID . dim_decl
   53        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 30
    MK_LB      shift, and go to state 31

    MK_LPAREN  reduce using rule 8 (function_head)
    $default   reduce using rule 51 (init_id)

    dim_decl  go to state 32


State 29

   30 var_decl: type init_id_list . MK_SEMICOLON
   50 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 33
    MK_SEMICOLON  shift, and go to state 42


State 30

   53 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 48
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 31

   39 dim_decl: MK_LB . cexpr MK_RB

    CONST      shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    cexpr    go to state 57
    mcexpr   go to state 58
    cfactor  go to state 59


State 32

   40 dim_decl: dim_decl . MK_LB cexpr MK_RB
   52 init_id: ID dim_decl .

    MK_LB  shift, and go to state 60

    $default  reduce using rule 52 (init_id)


State 33

   50 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 16

    init_id  go to state 61


State 34

   31 var_decl: ID init_id_list MK_SEMICOLON .

    $default  reduce using rule 31 (var_decl)


State 35

   35 id_list: ID .
   38        | ID . dim_decl

    MK_LB  shift, and go to state 31

    $default  reduce using rule 35 (id_list)

    dim_decl  go to state 62


State 36

   29 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   36 id_list: id_list . MK_COMMA ID
   37        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 63
    MK_SEMICOLON  shift, and go to state 64


State 37

   28 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   36 id_list: id_list . MK_COMMA ID
   37        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 63
    MK_SEMICOLON  shift, and go to state 65


State 38

    7 function_decl: function_head MK_LPAREN opt_param_list . MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_RPAREN  shift, and go to state 66


State 39

   10 opt_param_list: param_list .
   12 param_list: param_list . MK_COMMA param

    MK_COMMA  shift, and go to state 67

    $default  reduce using rule 10 (opt_param_list)


State 40

   13 param_list: param .

    $default  reduce using rule 13 (param_list)


State 41

   14 param: type . ID
   15      | type . ID dim_fn

    ID  shift, and go to state 68


State 42

   30 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 30 (var_decl)


State 43

  103 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  109 var_ref: ID .
  110        | ID . dim_list

    MK_LB      shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    $default  reduce using rule 109 (var_ref)

    dim_list  go to state 71


State 44

  100 factor: CONST .

    $default  reduce using rule 100 (factor)


State 45

   99 factor: OP_NOT . MK_LPAREN relop_expr MK_RPAREN
  102       | OP_NOT . CONST
  105       | OP_NOT . ID MK_LPAREN relop_expr_list MK_RPAREN
  108       | OP_NOT . var_ref

    ID         shift, and go to state 72
    CONST      shift, and go to state 73
    MK_LPAREN  shift, and go to state 74

    var_ref  go to state 75


State 46

   98 factor: OP_MINUS . MK_LPAREN relop_expr MK_RPAREN
  101       | OP_MINUS . CONST
  104       | OP_MINUS . ID MK_LPAREN relop_expr_list MK_RPAREN
  107       | OP_MINUS . var_ref

    ID         shift, and go to state 76
    CONST      shift, and go to state 77
    MK_LPAREN  shift, and go to state 78

    var_ref  go to state 79


State 47

   97 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 80
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 48

   53 init_id: ID OP_ASSIGN relop_expr .
   74 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 81

    $default  reduce using rule 53 (init_id)


State 49

   73 relop_expr: relop_term .
   76 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 82

    $default  reduce using rule 73 (relop_expr)


State 50

   75 relop_term: relop_factor .

    $default  reduce using rule 75 (relop_term)


State 51

   77 relop_factor: expr .
   78             | expr . rel_op expr
   89 expr: expr . add_op term

    OP_EQ     shift, and go to state 83
    OP_NE     shift, and go to state 84
    OP_GT     shift, and go to state 85
    OP_LT     shift, and go to state 86
    OP_GE     shift, and go to state 87
    OP_LE     shift, and go to state 88
    OP_PLUS   shift, and go to state 89
    OP_MINUS  shift, and go to state 90

    $default  reduce using rule 77 (relop_factor)

    rel_op  go to state 91
    add_op  go to state 92


State 52

   90 expr: term .
   93 term: term . mul_op factor

    OP_TIMES   shift, and go to state 93
    OP_DIVIDE  shift, and go to state 94

    $default  reduce using rule 90 (expr)

    mul_op  go to state 95


State 53

   94 term: factor .

    $default  reduce using rule 94 (term)


State 54

  106 factor: var_ref .

    $default  reduce using rule 106 (factor)


State 55

   47 cfactor: CONST .

    $default  reduce using rule 47 (cfactor)


State 56

   48 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    cexpr    go to state 96
    mcexpr   go to state 58
    cfactor  go to state 59


State 57

   39 dim_decl: MK_LB cexpr . MK_RB
   41 cexpr: cexpr . OP_PLUS mcexpr
   42      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 97
    OP_MINUS  shift, and go to state 98
    MK_RB     shift, and go to state 99


State 58

   43 cexpr: mcexpr .
   44 mcexpr: mcexpr . OP_TIMES cfactor
   45       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 100
    OP_DIVIDE  shift, and go to state 101

    $default  reduce using rule 43 (cexpr)


State 59

   46 mcexpr: cfactor .

    $default  reduce using rule 46 (mcexpr)


State 60

   40 dim_decl: dim_decl MK_LB . cexpr MK_RB

    CONST      shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    cexpr    go to state 102
    mcexpr   go to state 58
    cfactor  go to state 59


State 61

   50 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 50 (init_id_list)


State 62

   38 id_list: ID dim_decl .
   40 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 60

    $default  reduce using rule 38 (id_list)


State 63

   36 id_list: id_list MK_COMMA . ID
   37        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 103


State 64

   29 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 29 (type_decl)


State 65

   28 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 28 (type_decl)


State 66

    7 function_decl: function_head MK_LPAREN opt_param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 104


State 67

   12 param_list: param_list MK_COMMA . param

    ID     shift, and go to state 20
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    param  go to state 105
    type   go to state 41


State 68

   14 param: type ID .
   15      | type ID . dim_fn

    MK_LB  shift, and go to state 106

    $default  reduce using rule 14 (param)

    dim_fn  go to state 107


State 69

  112 dim_list: MK_LB . expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    expr     go to state 108
    term     go to state 52
    factor   go to state 53
    var_ref  go to state 54


State 70

  103 factor: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 86 (relop_expr_list)

    relop_expr                go to state 109
    relop_term                go to state 49
    relop_factor              go to state 50
    relop_expr_list           go to state 110
    nonempty_relop_expr_list  go to state 111
    expr                      go to state 51
    term                      go to state 52
    factor                    go to state 53
    var_ref                   go to state 54


State 71

  110 var_ref: ID dim_list .
  111 dim_list: dim_list . MK_LB expr MK_RB

    MK_LB  shift, and go to state 112

    $default  reduce using rule 110 (var_ref)


State 72

  105 factor: OP_NOT ID . MK_LPAREN relop_expr_list MK_RPAREN
  109 var_ref: ID .
  110        | ID . dim_list

    MK_LB      shift, and go to state 69
    MK_LPAREN  shift, and go to state 113

    $default  reduce using rule 109 (var_ref)

    dim_list  go to state 71


State 73

  102 factor: OP_NOT CONST .

    $default  reduce using rule 102 (factor)


State 74

   99 factor: OP_NOT MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 114
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 75

  108 factor: OP_NOT var_ref .

    $default  reduce using rule 108 (factor)


State 76

  104 factor: OP_MINUS ID . MK_LPAREN relop_expr_list MK_RPAREN
  109 var_ref: ID .
  110        | ID . dim_list

    MK_LB      shift, and go to state 69
    MK_LPAREN  shift, and go to state 115

    $default  reduce using rule 109 (var_ref)

    dim_list  go to state 71


State 77

  101 factor: OP_MINUS CONST .

    $default  reduce using rule 101 (factor)


State 78

   98 factor: OP_MINUS MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 116
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 79

  107 factor: OP_MINUS var_ref .

    $default  reduce using rule 107 (factor)


State 80

   74 relop_expr: relop_expr . OP_OR relop_term
   97 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 81
    MK_RPAREN  shift, and go to state 117


State 81

   74 relop_expr: relop_expr OP_OR . relop_term

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_term    go to state 118
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 82

   76 relop_term: relop_term OP_AND . relop_factor

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_factor  go to state 119
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 83

   79 rel_op: OP_EQ .

    $default  reduce using rule 79 (rel_op)


State 84

   82 rel_op: OP_NE .

    $default  reduce using rule 82 (rel_op)


State 85

   83 rel_op: OP_GT .

    $default  reduce using rule 83 (rel_op)


State 86

   84 rel_op: OP_LT .

    $default  reduce using rule 84 (rel_op)


State 87

   80 rel_op: OP_GE .

    $default  reduce using rule 80 (rel_op)


State 88

   81 rel_op: OP_LE .

    $default  reduce using rule 81 (rel_op)


State 89

   91 add_op: OP_PLUS .

    $default  reduce using rule 91 (add_op)


State 90

   92 add_op: OP_MINUS .

    $default  reduce using rule 92 (add_op)


State 91

   78 relop_factor: expr rel_op . expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    expr     go to state 120
    term     go to state 52
    factor   go to state 53
    var_ref  go to state 54


State 92

   89 expr: expr add_op . term

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    term     go to state 121
    factor   go to state 53
    var_ref  go to state 54


State 93

   95 mul_op: OP_TIMES .

    $default  reduce using rule 95 (mul_op)


State 94

   96 mul_op: OP_DIVIDE .

    $default  reduce using rule 96 (mul_op)


State 95

   93 term: term mul_op . factor

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    factor   go to state 122
    var_ref  go to state 54


State 96

   41 cexpr: cexpr . OP_PLUS mcexpr
   42      | cexpr . OP_MINUS mcexpr
   48 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 97
    OP_MINUS   shift, and go to state 98
    MK_RPAREN  shift, and go to state 123


State 97

   41 cexpr: cexpr OP_PLUS . mcexpr

    CONST      shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    mcexpr   go to state 124
    cfactor  go to state 59


State 98

   42 cexpr: cexpr OP_MINUS . mcexpr

    CONST      shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    mcexpr   go to state 125
    cfactor  go to state 59


State 99

   39 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 39 (dim_decl)


State 100

   44 mcexpr: mcexpr OP_TIMES . cfactor

    CONST      shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    cfactor  go to state 126


State 101

   45 mcexpr: mcexpr OP_DIVIDE . cfactor

    CONST      shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    cfactor  go to state 127


State 102

   40 dim_decl: dim_decl MK_LB cexpr . MK_RB
   41 cexpr: cexpr . OP_PLUS mcexpr
   42      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 97
    OP_MINUS  shift, and go to state 98
    MK_RB     shift, and go to state 128


State 103

   36 id_list: id_list MK_COMMA ID .
   37        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 31

    $default  reduce using rule 36 (id_list)

    dim_decl  go to state 129


State 104

    7 function_decl: function_head MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 130
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 131
    WHILE         shift, and go to state 132
    FOR           shift, and go to state 133
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 134
    MK_SEMICOLON  shift, and go to state 135
    RETURN        shift, and go to state 136

    $default  reduce using rule 23 (block)

    block      go to state 137
    decl_list  go to state 138
    decl       go to state 12
    type_decl  go to state 13
    var_decl   go to state 14
    type       go to state 139
    stmt_list  go to state 140
    stmt       go to state 141
    var_ref    go to state 142


State 105

   12 param_list: param_list MK_COMMA param .

    $default  reduce using rule 12 (param_list)


State 106

   16 dim_fn: MK_LB . expr_null MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 19 (expr_null)

    expr_null  go to state 143
    expr       go to state 144
    term       go to state 52
    factor     go to state 53
    var_ref    go to state 54


State 107

   15 param: type ID dim_fn .
   17 dim_fn: dim_fn . MK_LB expr MK_RB

    MK_LB  shift, and go to state 145

    $default  reduce using rule 15 (param)


State 108

   89 expr: expr . add_op term
  112 dim_list: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 89
    OP_MINUS  shift, and go to state 90
    MK_RB     shift, and go to state 146

    add_op  go to state 92


State 109

   74 relop_expr: relop_expr . OP_OR relop_term
   88 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 81

    $default  reduce using rule 88 (nonempty_relop_expr_list)


State 110

  103 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 147


State 111

   85 relop_expr_list: nonempty_relop_expr_list .
   87 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 148

    $default  reduce using rule 85 (relop_expr_list)


State 112

  111 dim_list: dim_list MK_LB . expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    expr     go to state 149
    term     go to state 52
    factor   go to state 53
    var_ref  go to state 54


State 113

  105 factor: OP_NOT ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 86 (relop_expr_list)

    relop_expr                go to state 109
    relop_term                go to state 49
    relop_factor              go to state 50
    relop_expr_list           go to state 150
    nonempty_relop_expr_list  go to state 111
    expr                      go to state 51
    term                      go to state 52
    factor                    go to state 53
    var_ref                   go to state 54


State 114

   74 relop_expr: relop_expr . OP_OR relop_term
   99 factor: OP_NOT MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 81
    MK_RPAREN  shift, and go to state 151


State 115

  104 factor: OP_MINUS ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 86 (relop_expr_list)

    relop_expr                go to state 109
    relop_term                go to state 49
    relop_factor              go to state 50
    relop_expr_list           go to state 152
    nonempty_relop_expr_list  go to state 111
    expr                      go to state 51
    term                      go to state 52
    factor                    go to state 53
    var_ref                   go to state 54


State 116

   74 relop_expr: relop_expr . OP_OR relop_term
   98 factor: OP_MINUS MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 81
    MK_RPAREN  shift, and go to state 153


State 117

   97 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 97 (factor)


State 118

   74 relop_expr: relop_expr OP_OR relop_term .
   76 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 82

    $default  reduce using rule 74 (relop_expr)


State 119

   76 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 76 (relop_term)


State 120

   78 relop_factor: expr rel_op expr .
   89 expr: expr . add_op term

    OP_PLUS   shift, and go to state 89
    OP_MINUS  shift, and go to state 90

    $default  reduce using rule 78 (relop_factor)

    add_op  go to state 92


State 121

   89 expr: expr add_op term .
   93 term: term . mul_op factor

    OP_TIMES   shift, and go to state 93
    OP_DIVIDE  shift, and go to state 94

    $default  reduce using rule 89 (expr)

    mul_op  go to state 95


State 122

   93 term: term mul_op factor .

    $default  reduce using rule 93 (term)


State 123

   48 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 48 (cfactor)


State 124

   41 cexpr: cexpr OP_PLUS mcexpr .
   44 mcexpr: mcexpr . OP_TIMES cfactor
   45       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 100
    OP_DIVIDE  shift, and go to state 101

    $default  reduce using rule 41 (cexpr)


State 125

   42 cexpr: cexpr OP_MINUS mcexpr .
   44 mcexpr: mcexpr . OP_TIMES cfactor
   45       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 100
    OP_DIVIDE  shift, and go to state 101

    $default  reduce using rule 42 (cexpr)


State 126

   44 mcexpr: mcexpr OP_TIMES cfactor .

    $default  reduce using rule 44 (mcexpr)


State 127

   45 mcexpr: mcexpr OP_DIVIDE cfactor .

    $default  reduce using rule 45 (mcexpr)


State 128

   40 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 40 (dim_decl)


State 129

   37 id_list: id_list MK_COMMA ID dim_decl .
   40 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 60

    $default  reduce using rule 37 (id_list)


State 130

   31 var_decl: ID . init_id_list MK_SEMICOLON
   34 type: ID .
   62 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  109 var_ref: ID .
  110        | ID . dim_list

    ID         shift, and go to state 16
    MK_LB      shift, and go to state 69
    MK_LPAREN  shift, and go to state 154

    ID        [reduce using rule 34 (type)]
    $default  reduce using rule 109 (var_ref)

    init_id_list  go to state 17
    init_id       go to state 18
    dim_list      go to state 71


State 131

   60 stmt: IF . MK_LPAREN test MK_RPAREN stmt
   61     | IF . MK_LPAREN test MK_RPAREN stmt ELSE stmt

    MK_LPAREN  shift, and go to state 155


State 132

   57 stmt: WHILE . MK_LPAREN test MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 156


State 133

   58 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 157


State 134

   56 stmt: MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 130
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 131
    WHILE         shift, and go to state 132
    FOR           shift, and go to state 133
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 134
    MK_SEMICOLON  shift, and go to state 135
    RETURN        shift, and go to state 136

    $default  reduce using rule 23 (block)

    block      go to state 158
    decl_list  go to state 138
    decl       go to state 12
    type_decl  go to state 13
    var_decl   go to state 14
    type       go to state 139
    stmt_list  go to state 140
    stmt       go to state 141
    var_ref    go to state 142


State 135

   63 stmt: MK_SEMICOLON .

    $default  reduce using rule 63 (stmt)


State 136

   64 stmt: RETURN . MK_SEMICOLON
   65     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 43
    CONST         shift, and go to state 44
    OP_NOT        shift, and go to state 45
    OP_MINUS      shift, and go to state 46
    MK_LPAREN     shift, and go to state 47
    MK_SEMICOLON  shift, and go to state 159

    relop_expr    go to state 160
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 137

    7 function_decl: function_head MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 161


State 138

   20 block: decl_list . stmt_list
   22      | decl_list .
   24 decl_list: decl_list . decl

    ID            shift, and go to state 130
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 131
    WHILE         shift, and go to state 132
    FOR           shift, and go to state 133
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 134
    MK_SEMICOLON  shift, and go to state 135
    RETURN        shift, and go to state 136

    $default  reduce using rule 22 (block)

    decl       go to state 27
    type_decl  go to state 13
    var_decl   go to state 14
    type       go to state 139
    stmt_list  go to state 162
    stmt       go to state 141
    var_ref    go to state 142


State 139

   30 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 16

    init_id_list  go to state 29
    init_id       go to state 18


State 140

   21 block: stmt_list .
   54 stmt_list: stmt_list . stmt

    ID            shift, and go to state 163
    IF            shift, and go to state 131
    WHILE         shift, and go to state 132
    FOR           shift, and go to state 133
    MK_LBRACE     shift, and go to state 134
    MK_SEMICOLON  shift, and go to state 135
    RETURN        shift, and go to state 136

    $default  reduce using rule 21 (block)

    stmt     go to state 164
    var_ref  go to state 142


State 141

   55 stmt_list: stmt .

    $default  reduce using rule 55 (stmt_list)


State 142

   59 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON

    OP_ASSIGN  shift, and go to state 165


State 143

   16 dim_fn: MK_LB expr_null . MK_RB

    MK_RB  shift, and go to state 166


State 144

   18 expr_null: expr .
   89 expr: expr . add_op term

    OP_PLUS   shift, and go to state 89
    OP_MINUS  shift, and go to state 90

    $default  reduce using rule 18 (expr_null)

    add_op  go to state 92


State 145

   17 dim_fn: dim_fn MK_LB . expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    expr     go to state 167
    term     go to state 52
    factor   go to state 53
    var_ref  go to state 54


State 146

  112 dim_list: MK_LB expr MK_RB .

    $default  reduce using rule 112 (dim_list)


State 147

  103 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 103 (factor)


State 148

   87 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 168
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 149

   89 expr: expr . add_op term
  111 dim_list: dim_list MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 89
    OP_MINUS  shift, and go to state 90
    MK_RB     shift, and go to state 169

    add_op  go to state 92


State 150

  105 factor: OP_NOT ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 170


State 151

   99 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 99 (factor)


State 152

  104 factor: OP_MINUS ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 171


State 153

   98 factor: OP_MINUS MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 98 (factor)


State 154

   62 stmt: ID MK_LPAREN . relop_expr_list MK_RPAREN MK_SEMICOLON

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 86 (relop_expr_list)

    relop_expr                go to state 109
    relop_term                go to state 49
    relop_factor              go to state 50
    relop_expr_list           go to state 172
    nonempty_relop_expr_list  go to state 111
    expr                      go to state 51
    term                      go to state 52
    factor                    go to state 53
    var_ref                   go to state 54


State 155

   60 stmt: IF MK_LPAREN . test MK_RPAREN stmt
   61     | IF MK_LPAREN . test MK_RPAREN stmt ELSE stmt

    ID         shift, and go to state 173
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    test          go to state 174
    assign_expr   go to state 175
    relop_expr    go to state 176
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 156

   57 stmt: WHILE MK_LPAREN . test MK_RPAREN stmt

    ID         shift, and go to state 173
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    test          go to state 177
    assign_expr   go to state 175
    relop_expr    go to state 176
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 157

   58 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 173
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 67 (assign_expr_list)

    assign_expr_list           go to state 178
    nonempty_assign_expr_list  go to state 179
    assign_expr                go to state 180
    relop_expr                 go to state 176
    relop_term                 go to state 49
    relop_factor               go to state 50
    expr                       go to state 51
    term                       go to state 52
    factor                     go to state 53
    var_ref                    go to state 54


State 158

   56 stmt: MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 181


State 159

   64 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 64 (stmt)


State 160

   65 stmt: RETURN relop_expr . MK_SEMICOLON
   74 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 81
    MK_SEMICOLON  shift, and go to state 182


State 161

    7 function_decl: function_head MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 7 (function_decl)


State 162

   20 block: decl_list stmt_list .
   54 stmt_list: stmt_list . stmt

    ID            shift, and go to state 163
    IF            shift, and go to state 131
    WHILE         shift, and go to state 132
    FOR           shift, and go to state 133
    MK_LBRACE     shift, and go to state 134
    MK_SEMICOLON  shift, and go to state 135
    RETURN        shift, and go to state 136

    $default  reduce using rule 20 (block)

    stmt     go to state 164
    var_ref  go to state 142


State 163

   62 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  109 var_ref: ID .
  110        | ID . dim_list

    MK_LB      shift, and go to state 69
    MK_LPAREN  shift, and go to state 154

    $default  reduce using rule 109 (var_ref)

    dim_list  go to state 71


State 164

   54 stmt_list: stmt_list stmt .

    $default  reduce using rule 54 (stmt_list)


State 165

   59 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 183
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 166

   16 dim_fn: MK_LB expr_null MK_RB .

    $default  reduce using rule 16 (dim_fn)


State 167

   17 dim_fn: dim_fn MK_LB expr . MK_RB
   89 expr: expr . add_op term

    OP_PLUS   shift, and go to state 89
    OP_MINUS  shift, and go to state 90
    MK_RB     shift, and go to state 184

    add_op  go to state 92


State 168

   74 relop_expr: relop_expr . OP_OR relop_term
   87 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 81

    $default  reduce using rule 87 (nonempty_relop_expr_list)


State 169

  111 dim_list: dim_list MK_LB expr MK_RB .

    $default  reduce using rule 111 (dim_list)


State 170

  105 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 105 (factor)


State 171

  104 factor: OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 104 (factor)


State 172

   62 stmt: ID MK_LPAREN relop_expr_list . MK_RPAREN MK_SEMICOLON

    MK_RPAREN  shift, and go to state 185


State 173

   71 assign_expr: ID . OP_ASSIGN relop_expr
  103 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  109 var_ref: ID .
  110        | ID . dim_list

    OP_ASSIGN  shift, and go to state 186
    MK_LB      shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    $default  reduce using rule 109 (var_ref)

    dim_list  go to state 71


State 174

   60 stmt: IF MK_LPAREN test . MK_RPAREN stmt
   61     | IF MK_LPAREN test . MK_RPAREN stmt ELSE stmt

    MK_RPAREN  shift, and go to state 187


State 175

   70 test: assign_expr .

    $default  reduce using rule 70 (test)


State 176

   72 assign_expr: relop_expr .
   74 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 81

    $default  reduce using rule 72 (assign_expr)


State 177

   57 stmt: WHILE MK_LPAREN test . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 188


State 178

   58 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 189


State 179

   66 assign_expr_list: nonempty_assign_expr_list .
   68 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 190

    $default  reduce using rule 66 (assign_expr_list)


State 180

   69 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 69 (nonempty_assign_expr_list)


State 181

   56 stmt: MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 56 (stmt)


State 182

   65 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 65 (stmt)


State 183

   59 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   74 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 81
    MK_SEMICOLON  shift, and go to state 191


State 184

   17 dim_fn: dim_fn MK_LB expr MK_RB .

    $default  reduce using rule 17 (dim_fn)


State 185

   62 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 192


State 186

   71 assign_expr: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 193
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 187

   60 stmt: IF MK_LPAREN test MK_RPAREN . stmt
   61     | IF MK_LPAREN test MK_RPAREN . stmt ELSE stmt

    ID            shift, and go to state 163
    IF            shift, and go to state 131
    WHILE         shift, and go to state 132
    FOR           shift, and go to state 133
    MK_LBRACE     shift, and go to state 134
    MK_SEMICOLON  shift, and go to state 135
    RETURN        shift, and go to state 136

    stmt     go to state 194
    var_ref  go to state 142


State 188

   57 stmt: WHILE MK_LPAREN test MK_RPAREN . stmt

    ID            shift, and go to state 163
    IF            shift, and go to state 131
    WHILE         shift, and go to state 132
    FOR           shift, and go to state 133
    MK_LBRACE     shift, and go to state 134
    MK_SEMICOLON  shift, and go to state 135
    RETURN        shift, and go to state 136

    stmt     go to state 195
    var_ref  go to state 142


State 189

   58 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 86 (relop_expr_list)

    relop_expr                go to state 109
    relop_term                go to state 49
    relop_factor              go to state 50
    relop_expr_list           go to state 196
    nonempty_relop_expr_list  go to state 111
    expr                      go to state 51
    term                      go to state 52
    factor                    go to state 53
    var_ref                   go to state 54


State 190

   68 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 173
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    assign_expr   go to state 197
    relop_expr    go to state 176
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 191

   59 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 59 (stmt)


State 192

   62 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 62 (stmt)


State 193

   71 assign_expr: ID OP_ASSIGN relop_expr .
   74 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 81

    $default  reduce using rule 71 (assign_expr)


State 194

   60 stmt: IF MK_LPAREN test MK_RPAREN stmt .
   61     | IF MK_LPAREN test MK_RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 198

    ELSE      [reduce using rule 60 (stmt)]
    $default  reduce using rule 60 (stmt)


State 195

   57 stmt: WHILE MK_LPAREN test MK_RPAREN stmt .

    $default  reduce using rule 57 (stmt)


State 196

   58 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 199


State 197

   68 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 68 (nonempty_assign_expr_list)


State 198

   61 stmt: IF MK_LPAREN test MK_RPAREN stmt ELSE . stmt

    ID            shift, and go to state 163
    IF            shift, and go to state 131
    WHILE         shift, and go to state 132
    FOR           shift, and go to state 133
    MK_LBRACE     shift, and go to state 134
    MK_SEMICOLON  shift, and go to state 135
    RETURN        shift, and go to state 136

    stmt     go to state 200
    var_ref  go to state 142


State 199

   58 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 173
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 67 (assign_expr_list)

    assign_expr_list           go to state 201
    nonempty_assign_expr_list  go to state 179
    assign_expr                go to state 180
    relop_expr                 go to state 176
    relop_term                 go to state 49
    relop_factor               go to state 50
    expr                       go to state 51
    term                       go to state 52
    factor                     go to state 53
    var_ref                    go to state 54


State 200

   61 stmt: IF MK_LPAREN test MK_RPAREN stmt ELSE stmt .

    $default  reduce using rule 61 (stmt)


State 201

   58 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 202


State 202

   58 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 163
    IF            shift, and go to state 131
    WHILE         shift, and go to state 132
    FOR           shift, and go to state 133
    MK_LBRACE     shift, and go to state 134
    MK_SEMICOLON  shift, and go to state 135
    RETURN        shift, and go to state 136

    stmt     go to state 203
    var_ref  go to state 142


State 203

   58 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 58 (stmt)
