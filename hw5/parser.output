Terminals unused in grammar

   MK_DOT
   ERROR


State 217 conflicts: 1 shift/reduce
State 227 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl_list
    2        | %empty

    3 global_decl_list: global_decl_list global_decl
    4                 | global_decl

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    8              | VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

   11 param_list: param_list MK_COMMA param
   12           | param

   13 param: type ID
   14      | type ID dim_fn

   15 dim_fn: MK_LB expr_null MK_RB
   16       | dim_fn MK_LB expr MK_RB

   17 expr_null: expr
   18          | %empty

   19 block: decl_list stmt_list
   20      | stmt_list
   21      | decl_list
   22      | %empty

   23 decl_list: decl_list decl
   24          | decl

   25 decl: type_decl
   26     | var_decl

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON
   28          | TYPEDEF VOID id_list MK_SEMICOLON

   29 var_decl: type init_id_list MK_SEMICOLON

   30 type: INT
   31     | FLOAT
   32     | ID

   33 id_list: ID
   34        | id_list MK_COMMA ID
   35        | id_list MK_COMMA ID dim_decl
   36        | ID dim_decl

   37 dim_decl: MK_LB crelop_expr MK_RB
   38         | dim_decl MK_LB crelop_expr MK_RB

   39 crelop_expr: crelop_term
   40            | crelop_expr OP_OR crelop_term

   41 crelop_term: crelop_factor
   42            | crelop_term OP_AND crelop_factor

   43 crelop_factor: cexpr
   44              | cexpr rel_op cexpr

   45 cexpr: cexpr OP_PLUS mcexpr
   46      | cexpr OP_MINUS mcexpr
   47      | mcexpr

   48 mcexpr: mcexpr OP_TIMES cfactor
   49       | mcexpr OP_DIVIDE cfactor
   50       | cfactor

   51 cfactor: CONST
   52        | unary_op CONST
   53        | MK_LPAREN cexpr MK_RPAREN
   54        | unary_op MK_LPAREN cexpr MK_RPAREN

   55 init_id_list: init_id
   56             | init_id_list MK_COMMA init_id

   57 init_id: ID
   58        | ID dim_decl
   59        | ID OP_ASSIGN relop_expr

   60 stmt_list: stmt_list stmt
   61          | stmt

   62 stmt: MK_LBRACE block MK_RBRACE
   63     | WHILE MK_LPAREN nonempty_assign_expr_list MK_RPAREN stmt
   64     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   65     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   66     | IF MK_LPAREN test MK_RPAREN stmt
   67     | IF MK_LPAREN test MK_RPAREN stmt ELSE stmt
   68     | var_ref MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
   69     | MK_SEMICOLON
   70     | RETURN MK_SEMICOLON
   71     | RETURN relop_expr MK_SEMICOLON
   72     | double_add_id MK_SEMICOLON

   73 test: assign_expr

   74 assign_expr_list: nonempty_assign_expr_list
   75                 | %empty

   76 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   77                          | assign_expr

   78 assign_expr: ID OP_ASSIGN relop_expr
   79            | relop_expr
   80            | MK_LPAREN nonempty_assign_expr_list MK_RPAREN

   81 relop_expr: relop_term
   82           | relop_expr OP_OR relop_term

   83 relop_term: relop_factor
   84           | relop_term OP_AND relop_factor

   85 relop_factor: expr
   86             | expr rel_op expr

   87 rel_op: OP_EQ
   88       | OP_GE
   89       | OP_LE
   90       | OP_NE
   91       | OP_GT
   92       | OP_LT

   93 relop_expr_list: nonempty_relop_expr_list
   94                | %empty

   95 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
   96                         | relop_expr

   97 expr: expr add_op term
   98     | term

   99 add_op: OP_PLUS
  100       | OP_MINUS

  101 term: term mul_op factor
  102     | factor

  103 mul_op: OP_TIMES
  104       | OP_DIVIDE

  105 factor: MK_LPAREN relop_expr MK_RPAREN
  106       | unary_op MK_LPAREN relop_expr MK_RPAREN
  107       | CONST
  108       | unary_op CONST
  109       | ID MK_LPAREN relop_expr_list MK_RPAREN
  110       | unary_op ID MK_LPAREN relop_expr_list MK_RPAREN
  111       | var_ref
  112       | unary_op var_ref
  113       | double_add_id

  114 double_add_id: OP_PP ID
  115              | ID OP_PP
  116              | OP_MM ID
  117              | ID OP_MM
  118              | OP_PP ID dim_list
  119              | ID dim_list OP_PP
  120              | OP_MM ID dim_list
  121              | ID dim_list OP_MM

  122 unary_op: OP_NOT
  123         | OP_PLUS
  124         | OP_MINUS

  125 var_ref: ID
  126        | ID dim_list

  127 dim_list: dim_list MK_LB relop_expr MK_RB
  128         | MK_LB relop_expr MK_RB


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 9 10 13 14 32 33 34 35 36 57 58 59 78 109 110 114 115
    116 117 118 119 120 121 125 126
CONST (259) 51 52 107 108
VOID (260) 8 10 28
INT (261) 30
FLOAT (262) 31
IF (263) 66 67
ELSE (264) 67
WHILE (265) 63
FOR (266) 64
TYPEDEF (267) 27 28
OP_ASSIGN (268) 59 65 78
OP_OR (269) 40 82
OP_AND (270) 42 84
OP_NOT (271) 122
OP_EQ (272) 87
OP_NE (273) 90
OP_GT (274) 91
OP_LT (275) 92
OP_GE (276) 88
OP_LE (277) 89
OP_PLUS (278) 45 99 123
OP_PP (279) 114 115 118 119
OP_MINUS (280) 46 100 124
OP_MM (281) 116 117 120 121
OP_TIMES (282) 48 103
OP_DIVIDE (283) 49 104
MK_LB (284) 15 16 37 38 127 128
MK_RB (285) 15 16 37 38 127 128
MK_LPAREN (286) 7 8 9 10 53 54 63 64 66 67 68 80 105 106 109 110
MK_RPAREN (287) 7 8 9 10 53 54 63 64 66 67 68 80 105 106 109 110
MK_LBRACE (288) 7 8 9 10 62
MK_RBRACE (289) 7 8 9 10 62
MK_COMMA (290) 11 34 35 56 76 95
MK_SEMICOLON (291) 27 28 29 64 65 68 69 70 71 72
MK_DOT (292)
ERROR (293)
RETURN (294) 70 71


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1 2, on right: 0
global_decl_list (42)
    on left: 3 4, on right: 1 3
global_decl (43)
    on left: 5 6, on right: 3 4
function_decl (44)
    on left: 7 8 9 10, on right: 5 6
param_list (45)
    on left: 11 12, on right: 7 8 11
param (46)
    on left: 13 14, on right: 11 12
dim_fn (47)
    on left: 15 16, on right: 14 16
expr_null (48)
    on left: 17 18, on right: 15
block (49)
    on left: 19 20 21 22, on right: 7 8 9 10 62
decl_list (50)
    on left: 23 24, on right: 5 19 21 23
decl (51)
    on left: 25 26, on right: 23 24
type_decl (52)
    on left: 27 28, on right: 25
var_decl (53)
    on left: 29, on right: 26
type (54)
    on left: 30 31 32, on right: 7 9 13 14 27 29
id_list (55)
    on left: 33 34 35 36, on right: 27 28 34 35
dim_decl (56)
    on left: 37 38, on right: 35 36 38 58
crelop_expr (57)
    on left: 39 40, on right: 37 38 40
crelop_term (58)
    on left: 41 42, on right: 39 40 42
crelop_factor (59)
    on left: 43 44, on right: 41 42
cexpr (60)
    on left: 45 46 47, on right: 43 44 45 46 53 54
mcexpr (61)
    on left: 48 49 50, on right: 45 46 47 48 49
cfactor (62)
    on left: 51 52 53 54, on right: 48 49 50
init_id_list (63)
    on left: 55 56, on right: 29 56
init_id (64)
    on left: 57 58 59, on right: 55 56
stmt_list (65)
    on left: 60 61, on right: 19 20 60
stmt (66)
    on left: 62 63 64 65 66 67 68 69 70 71 72, on right: 60 61 63 64
    66 67
test (67)
    on left: 73, on right: 66 67
assign_expr_list (68)
    on left: 74 75, on right: 64
nonempty_assign_expr_list (69)
    on left: 76 77, on right: 63 74 76 80
assign_expr (70)
    on left: 78 79 80, on right: 73 76 77
relop_expr (71)
    on left: 81 82, on right: 59 65 71 78 79 82 95 96 105 106 127 128
relop_term (72)
    on left: 83 84, on right: 81 82 84
relop_factor (73)
    on left: 85 86, on right: 83 84
rel_op (74)
    on left: 87 88 89 90 91 92, on right: 44 86
relop_expr_list (75)
    on left: 93 94, on right: 64 68 109 110
nonempty_relop_expr_list (76)
    on left: 95 96, on right: 93 95
expr (77)
    on left: 97 98, on right: 16 17 85 86 97
add_op (78)
    on left: 99 100, on right: 97
term (79)
    on left: 101 102, on right: 97 98 101
mul_op (80)
    on left: 103 104, on right: 101
factor (81)
    on left: 105 106 107 108 109 110 111 112 113, on right: 101 102
double_add_id (82)
    on left: 114 115 116 117 118 119 120 121, on right: 72 113
unary_op (83)
    on left: 122 123 124, on right: 52 54 106 108 110 112
var_ref (84)
    on left: 125 126, on right: 65 68 111 112
dim_list (85)
    on left: 127 128, on right: 118 119 120 121 126 127


State 0

    0 $accept: . program $end

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 2 (program)

    program           go to state 6
    global_decl_list  go to state 7
    global_decl       go to state 8
    function_decl     go to state 9
    decl_list         go to state 10
    decl              go to state 11
    type_decl         go to state 12
    var_decl          go to state 13
    type              go to state 14


State 1

   32 type: ID .

    $default  reduce using rule 32 (type)


State 2

    8 function_decl: VOID . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    ID  shift, and go to state 15


State 3

   30 type: INT .

    $default  reduce using rule 30 (type)


State 4

   31 type: FLOAT .

    $default  reduce using rule 31 (type)


State 5

   27 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   28          | TYPEDEF . VOID id_list MK_SEMICOLON

    ID     shift, and go to state 1
    VOID   shift, and go to state 16
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    type  go to state 17


State 6

    0 $accept: program . $end

    $end  shift, and go to state 18


State 7

    1 program: global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 1 (program)

    global_decl    go to state 19
    function_decl  go to state 9
    decl_list      go to state 10
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


State 8

    4 global_decl_list: global_decl .

    $default  reduce using rule 4 (global_decl_list)


State 9

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


State 10

    5 global_decl: decl_list . function_decl
   23 decl_list: decl_list . decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    function_decl  go to state 20
    decl           go to state 21
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


State 11

   24 decl_list: decl .

    $default  reduce using rule 24 (decl_list)


State 12

   25 decl: type_decl .

    $default  reduce using rule 25 (decl)


State 13

   26 decl: var_decl .

    $default  reduce using rule 26 (decl)


State 14

    7 function_decl: type . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 22

    init_id_list  go to state 23
    init_id       go to state 24


State 15

    8 function_decl: VOID ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_LPAREN  shift, and go to state 25


State 16

   28 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON

    ID  shift, and go to state 26

    id_list  go to state 27


State 17

   27 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 26

    id_list  go to state 28


State 18

    0 $accept: program $end .

    $default  accept


State 19

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


State 20

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


State 21

   23 decl_list: decl_list decl .

    $default  reduce using rule 23 (decl_list)


State 22

    7 function_decl: type ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   57 init_id: ID .
   58        | ID . dim_decl
   59        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 29
    MK_LB      shift, and go to state 30
    MK_LPAREN  shift, and go to state 31

    $default  reduce using rule 57 (init_id)

    dim_decl  go to state 32


State 23

   29 var_decl: type init_id_list . MK_SEMICOLON
   56 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 33
    MK_SEMICOLON  shift, and go to state 34


State 24

   55 init_id_list: init_id .

    $default  reduce using rule 55 (init_id_list)


State 25

    8 function_decl: VOID ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    ID         shift, and go to state 1
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 35

    param_list  go to state 36
    param       go to state 37
    type        go to state 38


State 26

   33 id_list: ID .
   36        | ID . dim_decl

    MK_LB  shift, and go to state 30

    $default  reduce using rule 33 (id_list)

    dim_decl  go to state 39


State 27

   28 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 40
    MK_SEMICOLON  shift, and go to state 41


State 28

   27 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 40
    MK_SEMICOLON  shift, and go to state 42


State 29

   59 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr     go to state 51
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 30

   37 dim_decl: MK_LB . crelop_expr MK_RB

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    crelop_expr    go to state 62
    crelop_term    go to state 63
    crelop_factor  go to state 64
    cexpr          go to state 65
    mcexpr         go to state 66
    cfactor        go to state 67
    unary_op       go to state 68


State 31

    7 function_decl: type ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    ID         shift, and go to state 1
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 69

    param_list  go to state 70
    param       go to state 37
    type        go to state 38


State 32

   38 dim_decl: dim_decl . MK_LB crelop_expr MK_RB
   58 init_id: ID dim_decl .

    MK_LB  shift, and go to state 71

    $default  reduce using rule 58 (init_id)


State 33

   56 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 72

    init_id  go to state 73


State 34

   29 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 29 (var_decl)


State 35

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 74


State 36

    8 function_decl: VOID ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 75
    MK_COMMA   shift, and go to state 76


State 37

   12 param_list: param .

    $default  reduce using rule 12 (param_list)


State 38

   13 param: type . ID
   14      | type . ID dim_fn

    ID  shift, and go to state 77


State 39

   36 id_list: ID dim_decl .
   38 dim_decl: dim_decl . MK_LB crelop_expr MK_RB

    MK_LB  shift, and go to state 71

    $default  reduce using rule 36 (id_list)


State 40

   34 id_list: id_list MK_COMMA . ID
   35        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 78


State 41

   28 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 28 (type_decl)


State 42

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 27 (type_decl)


State 43

  109 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  115 double_add_id: ID . OP_PP
  117              | ID . OP_MM
  119              | ID . dim_list OP_PP
  121              | ID . dim_list OP_MM
  125 var_ref: ID .
  126        | ID . dim_list

    OP_PP      shift, and go to state 79
    OP_MM      shift, and go to state 80
    MK_LB      shift, and go to state 81
    MK_LPAREN  shift, and go to state 82

    $default  reduce using rule 125 (var_ref)

    dim_list  go to state 83


State 44

  107 factor: CONST .

    $default  reduce using rule 107 (factor)


State 45

  122 unary_op: OP_NOT .

    $default  reduce using rule 122 (unary_op)


State 46

  123 unary_op: OP_PLUS .

    $default  reduce using rule 123 (unary_op)


State 47

  114 double_add_id: OP_PP . ID
  118              | OP_PP . ID dim_list

    ID  shift, and go to state 84


State 48

  124 unary_op: OP_MINUS .

    $default  reduce using rule 124 (unary_op)


State 49

  116 double_add_id: OP_MM . ID
  120              | OP_MM . ID dim_list

    ID  shift, and go to state 85


State 50

  105 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr     go to state 86
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 51

   59 init_id: ID OP_ASSIGN relop_expr .
   82 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 87

    $default  reduce using rule 59 (init_id)


State 52

   81 relop_expr: relop_term .
   84 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 88

    $default  reduce using rule 81 (relop_expr)


State 53

   83 relop_term: relop_factor .

    $default  reduce using rule 83 (relop_term)


State 54

   85 relop_factor: expr .
   86             | expr . rel_op expr
   97 expr: expr . add_op term

    OP_EQ     shift, and go to state 89
    OP_NE     shift, and go to state 90
    OP_GT     shift, and go to state 91
    OP_LT     shift, and go to state 92
    OP_GE     shift, and go to state 93
    OP_LE     shift, and go to state 94
    OP_PLUS   shift, and go to state 95
    OP_MINUS  shift, and go to state 96

    $default  reduce using rule 85 (relop_factor)

    rel_op  go to state 97
    add_op  go to state 98


State 55

   98 expr: term .
  101 term: term . mul_op factor

    OP_TIMES   shift, and go to state 99
    OP_DIVIDE  shift, and go to state 100

    $default  reduce using rule 98 (expr)

    mul_op  go to state 101


State 56

  102 term: factor .

    $default  reduce using rule 102 (term)


State 57

  113 factor: double_add_id .

    $default  reduce using rule 113 (factor)


State 58

  106 factor: unary_op . MK_LPAREN relop_expr MK_RPAREN
  108       | unary_op . CONST
  110       | unary_op . ID MK_LPAREN relop_expr_list MK_RPAREN
  112       | unary_op . var_ref

    ID         shift, and go to state 102
    CONST      shift, and go to state 103
    MK_LPAREN  shift, and go to state 104

    var_ref  go to state 105


State 59

  111 factor: var_ref .

    $default  reduce using rule 111 (factor)


State 60

   51 cfactor: CONST .

    $default  reduce using rule 51 (cfactor)


State 61

   53 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    cexpr     go to state 106
    mcexpr    go to state 66
    cfactor   go to state 67
    unary_op  go to state 68


State 62

   37 dim_decl: MK_LB crelop_expr . MK_RB
   40 crelop_expr: crelop_expr . OP_OR crelop_term

    OP_OR  shift, and go to state 107
    MK_RB  shift, and go to state 108


State 63

   39 crelop_expr: crelop_term .
   42 crelop_term: crelop_term . OP_AND crelop_factor

    OP_AND  shift, and go to state 109

    $default  reduce using rule 39 (crelop_expr)


State 64

   41 crelop_term: crelop_factor .

    $default  reduce using rule 41 (crelop_term)


State 65

   43 crelop_factor: cexpr .
   44              | cexpr . rel_op cexpr
   45 cexpr: cexpr . OP_PLUS mcexpr
   46      | cexpr . OP_MINUS mcexpr

    OP_EQ     shift, and go to state 89
    OP_NE     shift, and go to state 90
    OP_GT     shift, and go to state 91
    OP_LT     shift, and go to state 92
    OP_GE     shift, and go to state 93
    OP_LE     shift, and go to state 94
    OP_PLUS   shift, and go to state 110
    OP_MINUS  shift, and go to state 111

    $default  reduce using rule 43 (crelop_factor)

    rel_op  go to state 112


State 66

   47 cexpr: mcexpr .
   48 mcexpr: mcexpr . OP_TIMES cfactor
   49       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 113
    OP_DIVIDE  shift, and go to state 114

    $default  reduce using rule 47 (cexpr)


State 67

   50 mcexpr: cfactor .

    $default  reduce using rule 50 (mcexpr)


State 68

   52 cfactor: unary_op . CONST
   54        | unary_op . MK_LPAREN cexpr MK_RPAREN

    CONST      shift, and go to state 115
    MK_LPAREN  shift, and go to state 116


State 69

    9 function_decl: type ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 117


State 70

    7 function_decl: type ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 118
    MK_COMMA   shift, and go to state 76


State 71

   38 dim_decl: dim_decl MK_LB . crelop_expr MK_RB

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    crelop_expr    go to state 119
    crelop_term    go to state 63
    crelop_factor  go to state 64
    cexpr          go to state 65
    mcexpr         go to state 66
    cfactor        go to state 67
    unary_op       go to state 68


State 72

   57 init_id: ID .
   58        | ID . dim_decl
   59        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 29
    MK_LB      shift, and go to state 30

    $default  reduce using rule 57 (init_id)

    dim_decl  go to state 32


State 73

   56 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 56 (init_id_list)


State 74

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 120
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    TYPEDEF       shift, and go to state 5
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    $default  reduce using rule 22 (block)

    block          go to state 127
    decl_list      go to state 128
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 129
    stmt_list      go to state 130
    stmt           go to state 131
    double_add_id  go to state 132
    var_ref        go to state 133


State 75

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 134


State 76

   11 param_list: param_list MK_COMMA . param

    ID     shift, and go to state 1
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    param  go to state 135
    type   go to state 38


State 77

   13 param: type ID .
   14      | type ID . dim_fn

    MK_LB  shift, and go to state 136

    $default  reduce using rule 13 (param)

    dim_fn  go to state 137


State 78

   34 id_list: id_list MK_COMMA ID .
   35        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 30

    $default  reduce using rule 34 (id_list)

    dim_decl  go to state 138


State 79

  115 double_add_id: ID OP_PP .

    $default  reduce using rule 115 (double_add_id)


State 80

  117 double_add_id: ID OP_MM .

    $default  reduce using rule 117 (double_add_id)


State 81

  128 dim_list: MK_LB . relop_expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr     go to state 139
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 82

  109 factor: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 94 (relop_expr_list)

    relop_expr                go to state 140
    relop_term                go to state 52
    relop_factor              go to state 53
    relop_expr_list           go to state 141
    nonempty_relop_expr_list  go to state 142
    expr                      go to state 54
    term                      go to state 55
    factor                    go to state 56
    double_add_id             go to state 57
    unary_op                  go to state 58
    var_ref                   go to state 59


State 83

  119 double_add_id: ID dim_list . OP_PP
  121              | ID dim_list . OP_MM
  126 var_ref: ID dim_list .
  127 dim_list: dim_list . MK_LB relop_expr MK_RB

    OP_PP  shift, and go to state 143
    OP_MM  shift, and go to state 144
    MK_LB  shift, and go to state 145

    $default  reduce using rule 126 (var_ref)


State 84

  114 double_add_id: OP_PP ID .
  118              | OP_PP ID . dim_list

    MK_LB  shift, and go to state 81

    $default  reduce using rule 114 (double_add_id)

    dim_list  go to state 146


State 85

  116 double_add_id: OP_MM ID .
  120              | OP_MM ID . dim_list

    MK_LB  shift, and go to state 81

    $default  reduce using rule 116 (double_add_id)

    dim_list  go to state 147


State 86

   82 relop_expr: relop_expr . OP_OR relop_term
  105 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 87
    MK_RPAREN  shift, and go to state 148


State 87

   82 relop_expr: relop_expr OP_OR . relop_term

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_term     go to state 149
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 88

   84 relop_term: relop_term OP_AND . relop_factor

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_factor   go to state 150
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 89

   87 rel_op: OP_EQ .

    $default  reduce using rule 87 (rel_op)


State 90

   90 rel_op: OP_NE .

    $default  reduce using rule 90 (rel_op)


State 91

   91 rel_op: OP_GT .

    $default  reduce using rule 91 (rel_op)


State 92

   92 rel_op: OP_LT .

    $default  reduce using rule 92 (rel_op)


State 93

   88 rel_op: OP_GE .

    $default  reduce using rule 88 (rel_op)


State 94

   89 rel_op: OP_LE .

    $default  reduce using rule 89 (rel_op)


State 95

   99 add_op: OP_PLUS .

    $default  reduce using rule 99 (add_op)


State 96

  100 add_op: OP_MINUS .

    $default  reduce using rule 100 (add_op)


State 97

   86 relop_factor: expr rel_op . expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    expr           go to state 151
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 98

   97 expr: expr add_op . term

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    term           go to state 152
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 99

  103 mul_op: OP_TIMES .

    $default  reduce using rule 103 (mul_op)


State 100

  104 mul_op: OP_DIVIDE .

    $default  reduce using rule 104 (mul_op)


State 101

  101 term: term mul_op . factor

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    factor         go to state 153
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 102

  110 factor: unary_op ID . MK_LPAREN relop_expr_list MK_RPAREN
  125 var_ref: ID .
  126        | ID . dim_list

    MK_LB      shift, and go to state 81
    MK_LPAREN  shift, and go to state 154

    $default  reduce using rule 125 (var_ref)

    dim_list  go to state 155


State 103

  108 factor: unary_op CONST .

    $default  reduce using rule 108 (factor)


State 104

  106 factor: unary_op MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr     go to state 156
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 105

  112 factor: unary_op var_ref .

    $default  reduce using rule 112 (factor)


State 106

   45 cexpr: cexpr . OP_PLUS mcexpr
   46      | cexpr . OP_MINUS mcexpr
   53 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 110
    OP_MINUS   shift, and go to state 111
    MK_RPAREN  shift, and go to state 157


State 107

   40 crelop_expr: crelop_expr OP_OR . crelop_term

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    crelop_term    go to state 158
    crelop_factor  go to state 64
    cexpr          go to state 65
    mcexpr         go to state 66
    cfactor        go to state 67
    unary_op       go to state 68


State 108

   37 dim_decl: MK_LB crelop_expr MK_RB .

    $default  reduce using rule 37 (dim_decl)


State 109

   42 crelop_term: crelop_term OP_AND . crelop_factor

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    crelop_factor  go to state 159
    cexpr          go to state 65
    mcexpr         go to state 66
    cfactor        go to state 67
    unary_op       go to state 68


State 110

   45 cexpr: cexpr OP_PLUS . mcexpr

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    mcexpr    go to state 160
    cfactor   go to state 67
    unary_op  go to state 68


State 111

   46 cexpr: cexpr OP_MINUS . mcexpr

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    mcexpr    go to state 161
    cfactor   go to state 67
    unary_op  go to state 68


State 112

   44 crelop_factor: cexpr rel_op . cexpr

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    cexpr     go to state 162
    mcexpr    go to state 66
    cfactor   go to state 67
    unary_op  go to state 68


State 113

   48 mcexpr: mcexpr OP_TIMES . cfactor

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    cfactor   go to state 163
    unary_op  go to state 68


State 114

   49 mcexpr: mcexpr OP_DIVIDE . cfactor

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    cfactor   go to state 164
    unary_op  go to state 68


State 115

   52 cfactor: unary_op CONST .

    $default  reduce using rule 52 (cfactor)


State 116

   54 cfactor: unary_op MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 60
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 48
    MK_LPAREN  shift, and go to state 61

    cexpr     go to state 165
    mcexpr    go to state 66
    cfactor   go to state 67
    unary_op  go to state 68


State 117

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 120
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    TYPEDEF       shift, and go to state 5
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    $default  reduce using rule 22 (block)

    block          go to state 166
    decl_list      go to state 128
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 129
    stmt_list      go to state 130
    stmt           go to state 131
    double_add_id  go to state 132
    var_ref        go to state 133


State 118

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 167


State 119

   38 dim_decl: dim_decl MK_LB crelop_expr . MK_RB
   40 crelop_expr: crelop_expr . OP_OR crelop_term

    OP_OR  shift, and go to state 107
    MK_RB  shift, and go to state 168


State 120

   32 type: ID .
  115 double_add_id: ID . OP_PP
  117              | ID . OP_MM
  119              | ID . dim_list OP_PP
  121              | ID . dim_list OP_MM
  125 var_ref: ID .
  126        | ID . dim_list

    OP_PP  shift, and go to state 79
    OP_MM  shift, and go to state 80
    MK_LB  shift, and go to state 81

    ID        reduce using rule 32 (type)
    $default  reduce using rule 125 (var_ref)

    dim_list  go to state 83


State 121

   66 stmt: IF . MK_LPAREN test MK_RPAREN stmt
   67     | IF . MK_LPAREN test MK_RPAREN stmt ELSE stmt

    MK_LPAREN  shift, and go to state 169


State 122

   63 stmt: WHILE . MK_LPAREN nonempty_assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 170


State 123

   64 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 171


State 124

   62 stmt: MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 120
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    TYPEDEF       shift, and go to state 5
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    $default  reduce using rule 22 (block)

    block          go to state 172
    decl_list      go to state 128
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 129
    stmt_list      go to state 130
    stmt           go to state 131
    double_add_id  go to state 132
    var_ref        go to state 133


State 125

   69 stmt: MK_SEMICOLON .

    $default  reduce using rule 69 (stmt)


State 126

   70 stmt: RETURN . MK_SEMICOLON
   71     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 43
    CONST         shift, and go to state 44
    OP_NOT        shift, and go to state 45
    OP_PLUS       shift, and go to state 46
    OP_PP         shift, and go to state 47
    OP_MINUS      shift, and go to state 48
    OP_MM         shift, and go to state 49
    MK_LPAREN     shift, and go to state 50
    MK_SEMICOLON  shift, and go to state 173

    relop_expr     go to state 174
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 127

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 175


State 128

   19 block: decl_list . stmt_list
   21      | decl_list .
   23 decl_list: decl_list . decl

    ID            shift, and go to state 120
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    TYPEDEF       shift, and go to state 5
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    $default  reduce using rule 21 (block)

    decl           go to state 21
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 129
    stmt_list      go to state 176
    stmt           go to state 131
    double_add_id  go to state 132
    var_ref        go to state 133


State 129

   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 72

    init_id_list  go to state 23
    init_id       go to state 24


State 130

   20 block: stmt_list .
   60 stmt_list: stmt_list . stmt

    ID            shift, and go to state 177
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    $default  reduce using rule 20 (block)

    stmt           go to state 178
    double_add_id  go to state 132
    var_ref        go to state 133


State 131

   61 stmt_list: stmt .

    $default  reduce using rule 61 (stmt_list)


State 132

   72 stmt: double_add_id . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 179


State 133

   65 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON
   68     | var_ref . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON

    OP_ASSIGN  shift, and go to state 180
    MK_LPAREN  shift, and go to state 181


State 134

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 120
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    TYPEDEF       shift, and go to state 5
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    $default  reduce using rule 22 (block)

    block          go to state 182
    decl_list      go to state 128
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 129
    stmt_list      go to state 130
    stmt           go to state 131
    double_add_id  go to state 132
    var_ref        go to state 133


State 135

   11 param_list: param_list MK_COMMA param .

    $default  reduce using rule 11 (param_list)


State 136

   15 dim_fn: MK_LB . expr_null MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 18 (expr_null)

    expr_null      go to state 183
    expr           go to state 184
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 137

   14 param: type ID dim_fn .
   16 dim_fn: dim_fn . MK_LB expr MK_RB

    MK_LB  shift, and go to state 185

    $default  reduce using rule 14 (param)


State 138

   35 id_list: id_list MK_COMMA ID dim_decl .
   38 dim_decl: dim_decl . MK_LB crelop_expr MK_RB

    MK_LB  shift, and go to state 71

    $default  reduce using rule 35 (id_list)


State 139

   82 relop_expr: relop_expr . OP_OR relop_term
  128 dim_list: MK_LB relop_expr . MK_RB

    OP_OR  shift, and go to state 87
    MK_RB  shift, and go to state 186


State 140

   82 relop_expr: relop_expr . OP_OR relop_term
   96 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 87

    $default  reduce using rule 96 (nonempty_relop_expr_list)


State 141

  109 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 187


State 142

   93 relop_expr_list: nonempty_relop_expr_list .
   95 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 188

    $default  reduce using rule 93 (relop_expr_list)


State 143

  119 double_add_id: ID dim_list OP_PP .

    $default  reduce using rule 119 (double_add_id)


State 144

  121 double_add_id: ID dim_list OP_MM .

    $default  reduce using rule 121 (double_add_id)


State 145

  127 dim_list: dim_list MK_LB . relop_expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr     go to state 189
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 146

  118 double_add_id: OP_PP ID dim_list .
  127 dim_list: dim_list . MK_LB relop_expr MK_RB

    MK_LB  shift, and go to state 145

    $default  reduce using rule 118 (double_add_id)


State 147

  120 double_add_id: OP_MM ID dim_list .
  127 dim_list: dim_list . MK_LB relop_expr MK_RB

    MK_LB  shift, and go to state 145

    $default  reduce using rule 120 (double_add_id)


State 148

  105 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 105 (factor)


State 149

   82 relop_expr: relop_expr OP_OR relop_term .
   84 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 88

    $default  reduce using rule 82 (relop_expr)


State 150

   84 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 84 (relop_term)


State 151

   86 relop_factor: expr rel_op expr .
   97 expr: expr . add_op term

    OP_PLUS   shift, and go to state 95
    OP_MINUS  shift, and go to state 96

    $default  reduce using rule 86 (relop_factor)

    add_op  go to state 98


State 152

   97 expr: expr add_op term .
  101 term: term . mul_op factor

    OP_TIMES   shift, and go to state 99
    OP_DIVIDE  shift, and go to state 100

    $default  reduce using rule 97 (expr)

    mul_op  go to state 101


State 153

  101 term: term mul_op factor .

    $default  reduce using rule 101 (term)


State 154

  110 factor: unary_op ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 94 (relop_expr_list)

    relop_expr                go to state 140
    relop_term                go to state 52
    relop_factor              go to state 53
    relop_expr_list           go to state 190
    nonempty_relop_expr_list  go to state 142
    expr                      go to state 54
    term                      go to state 55
    factor                    go to state 56
    double_add_id             go to state 57
    unary_op                  go to state 58
    var_ref                   go to state 59


State 155

  126 var_ref: ID dim_list .
  127 dim_list: dim_list . MK_LB relop_expr MK_RB

    MK_LB  shift, and go to state 145

    $default  reduce using rule 126 (var_ref)


State 156

   82 relop_expr: relop_expr . OP_OR relop_term
  106 factor: unary_op MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 87
    MK_RPAREN  shift, and go to state 191


State 157

   53 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 53 (cfactor)


State 158

   40 crelop_expr: crelop_expr OP_OR crelop_term .
   42 crelop_term: crelop_term . OP_AND crelop_factor

    OP_AND  shift, and go to state 109

    $default  reduce using rule 40 (crelop_expr)


State 159

   42 crelop_term: crelop_term OP_AND crelop_factor .

    $default  reduce using rule 42 (crelop_term)


State 160

   45 cexpr: cexpr OP_PLUS mcexpr .
   48 mcexpr: mcexpr . OP_TIMES cfactor
   49       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 113
    OP_DIVIDE  shift, and go to state 114

    $default  reduce using rule 45 (cexpr)


State 161

   46 cexpr: cexpr OP_MINUS mcexpr .
   48 mcexpr: mcexpr . OP_TIMES cfactor
   49       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 113
    OP_DIVIDE  shift, and go to state 114

    $default  reduce using rule 46 (cexpr)


State 162

   44 crelop_factor: cexpr rel_op cexpr .
   45 cexpr: cexpr . OP_PLUS mcexpr
   46      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 110
    OP_MINUS  shift, and go to state 111

    $default  reduce using rule 44 (crelop_factor)


State 163

   48 mcexpr: mcexpr OP_TIMES cfactor .

    $default  reduce using rule 48 (mcexpr)


State 164

   49 mcexpr: mcexpr OP_DIVIDE cfactor .

    $default  reduce using rule 49 (mcexpr)


State 165

   45 cexpr: cexpr . OP_PLUS mcexpr
   46      | cexpr . OP_MINUS mcexpr
   54 cfactor: unary_op MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 110
    OP_MINUS   shift, and go to state 111
    MK_RPAREN  shift, and go to state 192


State 166

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 193


State 167

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 120
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    TYPEDEF       shift, and go to state 5
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    $default  reduce using rule 22 (block)

    block          go to state 194
    decl_list      go to state 128
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 129
    stmt_list      go to state 130
    stmt           go to state 131
    double_add_id  go to state 132
    var_ref        go to state 133


State 168

   38 dim_decl: dim_decl MK_LB crelop_expr MK_RB .

    $default  reduce using rule 38 (dim_decl)


State 169

   66 stmt: IF MK_LPAREN . test MK_RPAREN stmt
   67     | IF MK_LPAREN . test MK_RPAREN stmt ELSE stmt

    ID         shift, and go to state 195
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 196

    test           go to state 197
    assign_expr    go to state 198
    relop_expr     go to state 199
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 170

   63 stmt: WHILE MK_LPAREN . nonempty_assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 195
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 196

    nonempty_assign_expr_list  go to state 200
    assign_expr                go to state 201
    relop_expr                 go to state 199
    relop_term                 go to state 52
    relop_factor               go to state 53
    expr                       go to state 54
    term                       go to state 55
    factor                     go to state 56
    double_add_id              go to state 57
    unary_op                   go to state 58
    var_ref                    go to state 59


State 171

   64 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 195
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 196

    $default  reduce using rule 75 (assign_expr_list)

    assign_expr_list           go to state 202
    nonempty_assign_expr_list  go to state 203
    assign_expr                go to state 201
    relop_expr                 go to state 199
    relop_term                 go to state 52
    relop_factor               go to state 53
    expr                       go to state 54
    term                       go to state 55
    factor                     go to state 56
    double_add_id              go to state 57
    unary_op                   go to state 58
    var_ref                    go to state 59


State 172

   62 stmt: MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 204


State 173

   70 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 70 (stmt)


State 174

   71 stmt: RETURN relop_expr . MK_SEMICOLON
   82 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 87
    MK_SEMICOLON  shift, and go to state 205


State 175

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 10 (function_decl)


State 176

   19 block: decl_list stmt_list .
   60 stmt_list: stmt_list . stmt

    ID            shift, and go to state 177
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    $default  reduce using rule 19 (block)

    stmt           go to state 178
    double_add_id  go to state 132
    var_ref        go to state 133


State 177

  115 double_add_id: ID . OP_PP
  117              | ID . OP_MM
  119              | ID . dim_list OP_PP
  121              | ID . dim_list OP_MM
  125 var_ref: ID .
  126        | ID . dim_list

    OP_PP  shift, and go to state 79
    OP_MM  shift, and go to state 80
    MK_LB  shift, and go to state 81

    $default  reduce using rule 125 (var_ref)

    dim_list  go to state 83


State 178

   60 stmt_list: stmt_list stmt .

    $default  reduce using rule 60 (stmt_list)


State 179

   72 stmt: double_add_id MK_SEMICOLON .

    $default  reduce using rule 72 (stmt)


State 180

   65 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr     go to state 206
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 181

   68 stmt: var_ref MK_LPAREN . relop_expr_list MK_RPAREN MK_SEMICOLON

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 94 (relop_expr_list)

    relop_expr                go to state 140
    relop_term                go to state 52
    relop_factor              go to state 53
    relop_expr_list           go to state 207
    nonempty_relop_expr_list  go to state 142
    expr                      go to state 54
    term                      go to state 55
    factor                    go to state 56
    double_add_id             go to state 57
    unary_op                  go to state 58
    var_ref                   go to state 59


State 182

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 208


State 183

   15 dim_fn: MK_LB expr_null . MK_RB

    MK_RB  shift, and go to state 209


State 184

   17 expr_null: expr .
   97 expr: expr . add_op term

    OP_PLUS   shift, and go to state 95
    OP_MINUS  shift, and go to state 96

    $default  reduce using rule 17 (expr_null)

    add_op  go to state 98


State 185

   16 dim_fn: dim_fn MK_LB . expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    expr           go to state 210
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 186

  128 dim_list: MK_LB relop_expr MK_RB .

    $default  reduce using rule 128 (dim_list)


State 187

  109 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 109 (factor)


State 188

   95 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr     go to state 211
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 189

   82 relop_expr: relop_expr . OP_OR relop_term
  127 dim_list: dim_list MK_LB relop_expr . MK_RB

    OP_OR  shift, and go to state 87
    MK_RB  shift, and go to state 212


State 190

  110 factor: unary_op ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 213


State 191

  106 factor: unary_op MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 106 (factor)


State 192

   54 cfactor: unary_op MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 54 (cfactor)


State 193

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 9 (function_decl)


State 194

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 214


State 195

   78 assign_expr: ID . OP_ASSIGN relop_expr
  109 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  115 double_add_id: ID . OP_PP
  117              | ID . OP_MM
  119              | ID . dim_list OP_PP
  121              | ID . dim_list OP_MM
  125 var_ref: ID .
  126        | ID . dim_list

    OP_ASSIGN  shift, and go to state 215
    OP_PP      shift, and go to state 79
    OP_MM      shift, and go to state 80
    MK_LB      shift, and go to state 81
    MK_LPAREN  shift, and go to state 82

    $default  reduce using rule 125 (var_ref)

    dim_list  go to state 83


State 196

   80 assign_expr: MK_LPAREN . nonempty_assign_expr_list MK_RPAREN
  105 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 195
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 196

    nonempty_assign_expr_list  go to state 216
    assign_expr                go to state 201
    relop_expr                 go to state 217
    relop_term                 go to state 52
    relop_factor               go to state 53
    expr                       go to state 54
    term                       go to state 55
    factor                     go to state 56
    double_add_id              go to state 57
    unary_op                   go to state 58
    var_ref                    go to state 59


State 197

   66 stmt: IF MK_LPAREN test . MK_RPAREN stmt
   67     | IF MK_LPAREN test . MK_RPAREN stmt ELSE stmt

    MK_RPAREN  shift, and go to state 218


State 198

   73 test: assign_expr .

    $default  reduce using rule 73 (test)


State 199

   79 assign_expr: relop_expr .
   82 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 87

    $default  reduce using rule 79 (assign_expr)


State 200

   63 stmt: WHILE MK_LPAREN nonempty_assign_expr_list . MK_RPAREN stmt
   76 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_RPAREN  shift, and go to state 219
    MK_COMMA   shift, and go to state 220


State 201

   77 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 77 (nonempty_assign_expr_list)


State 202

   64 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 221


State 203

   74 assign_expr_list: nonempty_assign_expr_list .
   76 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 220

    $default  reduce using rule 74 (assign_expr_list)


State 204

   62 stmt: MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 62 (stmt)


State 205

   71 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 71 (stmt)


State 206

   65 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   82 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 87
    MK_SEMICOLON  shift, and go to state 222


State 207

   68 stmt: var_ref MK_LPAREN relop_expr_list . MK_RPAREN MK_SEMICOLON

    MK_RPAREN  shift, and go to state 223


State 208

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 8 (function_decl)


State 209

   15 dim_fn: MK_LB expr_null MK_RB .

    $default  reduce using rule 15 (dim_fn)


State 210

   16 dim_fn: dim_fn MK_LB expr . MK_RB
   97 expr: expr . add_op term

    OP_PLUS   shift, and go to state 95
    OP_MINUS  shift, and go to state 96
    MK_RB     shift, and go to state 224

    add_op  go to state 98


State 211

   82 relop_expr: relop_expr . OP_OR relop_term
   95 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 87

    $default  reduce using rule 95 (nonempty_relop_expr_list)


State 212

  127 dim_list: dim_list MK_LB relop_expr MK_RB .

    $default  reduce using rule 127 (dim_list)


State 213

  110 factor: unary_op ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 110 (factor)


State 214

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 7 (function_decl)


State 215

   78 assign_expr: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr     go to state 225
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 216

   76 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr
   80 assign_expr: MK_LPAREN nonempty_assign_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 226
    MK_COMMA   shift, and go to state 220


State 217

   79 assign_expr: relop_expr .
   82 relop_expr: relop_expr . OP_OR relop_term
  105 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 87
    MK_RPAREN  shift, and go to state 148

    MK_RPAREN  [reduce using rule 79 (assign_expr)]
    $default   reduce using rule 79 (assign_expr)


State 218

   66 stmt: IF MK_LPAREN test MK_RPAREN . stmt
   67     | IF MK_LPAREN test MK_RPAREN . stmt ELSE stmt

    ID            shift, and go to state 177
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    stmt           go to state 227
    double_add_id  go to state 132
    var_ref        go to state 133


State 219

   63 stmt: WHILE MK_LPAREN nonempty_assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 177
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    stmt           go to state 228
    double_add_id  go to state 132
    var_ref        go to state 133


State 220

   76 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 195
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 196

    assign_expr    go to state 229
    relop_expr     go to state 199
    relop_term     go to state 52
    relop_factor   go to state 53
    expr           go to state 54
    term           go to state 55
    factor         go to state 56
    double_add_id  go to state 57
    unary_op       go to state 58
    var_ref        go to state 59


State 221

   64 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 94 (relop_expr_list)

    relop_expr                go to state 140
    relop_term                go to state 52
    relop_factor              go to state 53
    relop_expr_list           go to state 230
    nonempty_relop_expr_list  go to state 142
    expr                      go to state 54
    term                      go to state 55
    factor                    go to state 56
    double_add_id             go to state 57
    unary_op                  go to state 58
    var_ref                   go to state 59


State 222

   65 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 65 (stmt)


State 223

   68 stmt: var_ref MK_LPAREN relop_expr_list MK_RPAREN . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 231


State 224

   16 dim_fn: dim_fn MK_LB expr MK_RB .

    $default  reduce using rule 16 (dim_fn)


State 225

   78 assign_expr: ID OP_ASSIGN relop_expr .
   82 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 87

    $default  reduce using rule 78 (assign_expr)


State 226

   80 assign_expr: MK_LPAREN nonempty_assign_expr_list MK_RPAREN .

    $default  reduce using rule 80 (assign_expr)


State 227

   66 stmt: IF MK_LPAREN test MK_RPAREN stmt .
   67     | IF MK_LPAREN test MK_RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 232

    ELSE      [reduce using rule 66 (stmt)]
    $default  reduce using rule 66 (stmt)


State 228

   63 stmt: WHILE MK_LPAREN nonempty_assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 63 (stmt)


State 229

   76 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 76 (nonempty_assign_expr_list)


State 230

   64 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 233


State 231

   68 stmt: var_ref MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 68 (stmt)


State 232

   67 stmt: IF MK_LPAREN test MK_RPAREN stmt ELSE . stmt

    ID            shift, and go to state 177
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    stmt           go to state 234
    double_add_id  go to state 132
    var_ref        go to state 133


State 233

   64 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 195
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_PP      shift, and go to state 47
    OP_MINUS   shift, and go to state 48
    OP_MM      shift, and go to state 49
    MK_LPAREN  shift, and go to state 196

    $default  reduce using rule 75 (assign_expr_list)

    assign_expr_list           go to state 235
    nonempty_assign_expr_list  go to state 203
    assign_expr                go to state 201
    relop_expr                 go to state 199
    relop_term                 go to state 52
    relop_factor               go to state 53
    expr                       go to state 54
    term                       go to state 55
    factor                     go to state 56
    double_add_id              go to state 57
    unary_op                   go to state 58
    var_ref                    go to state 59


State 234

   67 stmt: IF MK_LPAREN test MK_RPAREN stmt ELSE stmt .

    $default  reduce using rule 67 (stmt)


State 235

   64 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 236


State 236

   64 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 177
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    OP_PP         shift, and go to state 47
    OP_MM         shift, and go to state 49
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    stmt           go to state 237
    double_add_id  go to state 132
    var_ref        go to state 133


State 237

   64 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 64 (stmt)
